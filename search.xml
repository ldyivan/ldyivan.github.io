<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>支付宝0门槛红包，每日都可以领取1次</title>
    <url>/2023/09/27/zfb-hb/</url>
    <content><![CDATA[<p>支付宝专属大额红包，0门槛，每人每日都可以领取1次：</p>
<p>1：使用浏览器打开链接自动领取：</p>
<p><a href="https://dz.hzv5.cn/hb/">https://dz.hzv5.cn/hb/</a></p>
<p>2：使用支付宝扫码自动领取：</p>
<p><img src="/img/Alipay/ZFB_hb.png" alt="支付宝领红包"></p>
<span id="more"></span>

<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>领取的红包为0门槛红包，使用支付宝支付时，会自动抵扣金额。</p>
<p>或者赞赏本博客。</p>
<p>当天领取的红包金额支付完，第二天才能继续领取新的红包。</p>
]]></content>
      <categories>
        <category>收集控</category>
      </categories>
      <tags>
        <tag>支付宝</tag>
        <tag>红包</tag>
      </tags>
  </entry>
  <entry>
    <title>自写与收集的一些免费的API接口（获取QQ昵称、头像、QQ秀等等...）</title>
    <url>/2018/04/24/my-apis/</url>
    <content><![CDATA[<p>自写的一些API接口，以及收集的一些QQ相关的（官方）免费API接口，有需要的可以拿去用：</p>
<h1 id="1、获取QQ头像："><a href="#1、获取QQ头像：" class="headerlink" title="1、获取QQ头像："></a>1、获取QQ头像：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">① http://q2.qlogo.cn/headimg_dl?dst_uin=QQ号码&amp;spec=100</span><br><span class="line">② http://q1.qlogo.cn/g?b=qq&amp;nk=QQ号码&amp;s=100</span><br><span class="line">③ http://qlogo1.store.qq.com/qzone/QQ号码/QQ号码/100</span><br></pre></td></tr></table></figure>

<h1 id="2、获取QQ群头像："><a href="#2、获取QQ群头像：" class="headerlink" title="2、获取QQ群头像："></a>2、获取QQ群头像：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://p.qlogo.cn/gh/QQ群号码/QQ群号码/100/</span><br></pre></td></tr></table></figure>

<h1 id="3、获取QQ秀接口："><a href="#3、获取QQ秀接口：" class="headerlink" title="3、获取QQ秀接口："></a>3、获取QQ秀接口：</h1><p><s><a href="http://qqshow-user.tencent.com/QQ号/10/00">http://qqshow-user.tencent.com/QQ号/10/00</a></s></p>
<h1 id="4、获取QQ空间音乐列表："><a href="#4、获取QQ空间音乐列表：" class="headerlink" title="4、获取QQ空间音乐列表："></a>4、获取QQ空间音乐列表：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://qzone-music.qq.com/fcg-bin/cgi_playlist_xml.fcg?g_tk=1916754934&amp;json=1&amp;uin=QQ号码</span><br></pre></td></tr></table></figure>

<h1 id="5、获取QQ昵称："><a href="#5、获取QQ昵称：" class="headerlink" title="5、获取QQ昵称："></a>5、获取QQ昵称：</h1><h3 id="①-已失效"><a href="#①-已失效" class="headerlink" title="① 已失效"></a>① 已失效</h3><p><s><a href="http://r.pengyou.com/fcg-bin/cgi_get_portrait.fcg?uins=QQ号码">http://r.pengyou.com/fcg-bin/cgi_get_portrait.fcg?uins=QQ号码</a></s></p>
<h3 id="②-已失效"><a href="#②-已失效" class="headerlink" title="② 已失效"></a>② 已失效</h3><p><s><a href="http://users.qzone.qq.com/fcg-bin/cgi_get_portrait.fcg?uins=QQ号码">http://users.qzone.qq.com/fcg-bin/cgi_get_portrait.fcg?uins=QQ号码</a></s></p>
<h3 id="全新的有效的接口"><a href="#全新的有效的接口" class="headerlink" title="全新的有效的接口"></a>全新的有效的接口</h3><span id="more"></span>

<h3 id="③-已失效"><a href="#③-已失效" class="headerlink" title="③ 已失效"></a>③ 已失效</h3><p><s><a href="https://h5.qzone.qq.com/proxy/domain/r.qzone.qq.com/cgi-bin/user/cgi_personal_card?g_tk=542577957&amp;uin=QQ号码">https://h5.qzone.qq.com/proxy/domain/r.qzone.qq.com/cgi-bin/user/cgi_personal_card?g_tk=542577957&amp;uin=QQ号码</a></s></p>
<h1 id="6、百度文字转语音合成接口："><a href="#6、百度文字转语音合成接口：" class="headerlink" title="6、百度文字转语音合成接口："></a>6、百度文字转语音合成接口：</h1><p><s><a href="http://tts.baidu.com/text2audio?lan=zh&amp;ie=UTF-8&amp;spd=2&amp;text=要转换的文字">http://tts.baidu.com/text2audio?lan=zh&amp;ie=UTF-8&amp;spd=2&amp;text=要转换的文字</a></s></p>
<p>lan=zh：语言是中文，如果改为lan=en，则语言是英文。</p>
<p>ie=UTF-8：文字格式。</p>
<p>spd=2：语速，可以是1-9的数字，数字越大，语速越快。</p>
<p>text=**：这个就是你要转换的文字。</p>
<h1 id="7、随机颜色代码："><a href="#7、随机颜色代码：" class="headerlink" title="7、随机颜色代码："></a>7、随机颜色代码：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://api.hzv5.cn/ys.php?n=hex&amp;t=json</span><br></pre></td></tr></table></figure>

<p>参数n有两种属性，rgb和hex,留空默认两个属性数据都返回！</p>
<p>参数t属性也有两种，text和json，留空默认返回json数据!</p>
<h1 id="8、生成随机密码："><a href="#8、生成随机密码：" class="headerlink" title="8、生成随机密码："></a>8、生成随机密码：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://api.hzv5.cn/randomcode.php?n=15</span><br></pre></td></tr></table></figure>

<p>参数n符合条件：50000≥n≥3</p>
<h1 id="9、文本加密与解密-有一些小问题-："><a href="#9、文本加密与解密-有一些小问题-：" class="headerlink" title="9、文本加密与解密(有一些小问题)："></a>9、文本加密与解密(有一些小问题)：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://api.hzv5.cn/textencryption.php?t=text&amp;amp;w=encode&amp;amp;n=json</span><br></pre></td></tr></table></figure>

<p>参数t：需要加密解密的文本内容</p>
<p>参数w：加密 encode ，解密 decode</p>
<p>参数n：返回的数据类型，可以是json和text</p>
<h1 id="10、二维码生成："><a href="#10、二维码生成：" class="headerlink" title="10、二维码生成："></a>10、二维码生成：</h1><p><s><a href="http://api.hzv5.cn/ewm.php?n=内容">http://api.hzv5.cn/ewm.php?n=内容</a></s></p>
<p>参数n为需要生成的二维码内容！</p>
<h1 id="11、看美女："><a href="#11、看美女：" class="headerlink" title="11、看美女："></a>11、看美女：</h1><p><s><a href="http://api.hzv5.cn/kmn.php">http://api.hzv5.cn/kmn.php</a></s></p>
<h1 id="12、查快递："><a href="#12、查快递：" class="headerlink" title="12、查快递："></a>12、查快递：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;s&gt;http://api.hzv5.cn/kd.php?n=&lt;s&gt;</span><br></pre></td></tr></table></figure>

<p>参数n为快递单号。</p>
<h1 id="13、百度百科词条："><a href="#13、百度百科词条：" class="headerlink" title="13、百度百科词条："></a>13、百度百科词条：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://api.hzv5.cn/bk.php?n=你好</span><br></pre></td></tr></table></figure>

<p>参数n为要搜索的关键字。</p>
<h1 id="14、更多二维码生成api"><a href="#14、更多二维码生成api" class="headerlink" title="14、更多二维码生成api"></a>14、更多二维码生成api</h1><p>① iClick接口 (无https)</p>
<p><s><a href="http://bshare.optimix.asia/barCode?site=weixin&amp;url=http://www.hzv5.cn">http://bshare.optimix.asia/barCode?site=weixin&amp;url=http://www.hzv5.cn</a></s></p>
<p>② 联图网(无https)</p>
<p><s><a href="http://qr.liantu.com/api.php?text=http://www.hzv5.cn">http://qr.liantu.com/api.php?text=http://www.hzv5.cn</a></s></p>
<p>③ K780数据网(支持https和http)</p>
<s>
http://api.k780.com:88/?app=qr.get&data=http://www.hzv5.cn&level=L&size=6

<p><a href="https://sapi.k780.com/?app=qr.get&amp;data=http://www.hzv5.cn&amp;level=L&amp;size=6">https://sapi.k780.com/?app=qr.get&amp;data=http://www.hzv5.cn&amp;level=L&amp;size=6</a><br></s></p>
<p>④ QR Code Generator(https接口)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.qrserver.com/v1/create-qr-code/?size=150x150&amp;data=http://www.hzv5.cn</span><br></pre></td></tr></table></figure>


<h1 id="失效"><a href="#失效" class="headerlink" title="失效"></a>失效</h1><p>如果有接口失效，请留言评论告诉我。</p>
<p>另：更多其他接口，或者找寻失效接口的替代接口，可以在博客上自行搜索。</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>更多api正在不断收集中，若你也有好的免费接口想要分享，请评论留言吧。</p>
]]></content>
      <categories>
        <category>收集控</category>
      </categories>
      <tags>
        <tag>免费api</tag>
        <tag>接口收集</tag>
      </tags>
  </entry>
  <entry>
    <title>QQ频道机器人Android客户端使用指南</title>
    <url>/2024/12/19/qqch-bot-readme/</url>
    <content><![CDATA[<h1 id="QQ频道机器人-Android客户端"><a href="#QQ频道机器人-Android客户端" class="headerlink" title="QQ频道机器人 Android客户端"></a>QQ频道机器人 Android客户端</h1><p>一个用于管理和操作QQ频道机器人的Android客户端应用，基于uniapp开发，提供了直观的用户界面和丰富的功能特性。</p>
<h2 id="客户端界面预览"><a href="#客户端界面预览" class="headerlink" title="客户端界面预览"></a>客户端界面预览</h2><p><img src="/img/qqBot/login_chat.png" alt="登录频道聊天查看和发送消息"></p>
<p><img src="/img/qqBot/plugin_setting_log.png" alt="插件功能运行日志和设置"></p>
<h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h2><h3 id="1-账号管理"><a href="#1-账号管理" class="headerlink" title="1. 账号管理"></a>1. 账号管理</h3><ul>
<li>App ID和Token登录</li>
<li>记住登录状态</li>
<li>自动登录选项</li>
<li>沙盒/正式环境切换</li>
<li>多账号管理</li>
<li>账号安全保护</li>
</ul>
<h3 id="2-频道管理"><a href="#2-频道管理" class="headerlink" title="2. 频道管理"></a>2. 频道管理</h3><ul>
<li>频道列表显示<ul>
<li>分组展示</li>
<li>在线人数显示</li>
<li>频道类型图标</li>
<li>频道状态标识</li>
</ul>
</li>
<li>未读消息统计<ul>
<li>普通消息计数</li>
<li>@消息特别标记</li>
<li>按频道分类统计</li>
</ul>
</li>
<li>频道权限管理<ul>
<li>自动识别管理员权限</li>
<li>权限值实时计算</li>
<li>权限检查功能</li>
</ul>
</li>
</ul>
<h3 id="3-消息功能"><a href="#3-消息功能" class="headerlink" title="3. 消息功能"></a>3. 消息功能</h3><ul>
<li><p>实时消息接收</p>
<span id="more"></span>

<ul>
<li>WebSocket长连接</li>
<li>断线自动重连</li>
<li>心跳保活机制</li>
</ul>
</li>
<li><p>消息发送功能</p>
<ul>
<li>文本消息支持</li>
<li>消息审核处理</li>
<li>审核状态显示</li>
</ul>
</li>
<li><p>消息管理</p>
<ul>
<li>消息撤回</li>
<li>历史记录查看</li>
<li>系统消息显示</li>
<li>在线状态更新</li>
</ul>
</li>
<li><p>消息展示</p>
<ul>
<li>时间戳显示</li>
<li>用户身份标识</li>
<li>消息状态图标</li>
<li>长按菜单操作</li>
</ul>
</li>
</ul>
<h3 id="4-插件系统"><a href="#4-插件系统" class="headerlink" title="4. 插件系统"></a>4. 插件系统</h3><ul>
<li>插件管理<ul>
<li>启用/禁用控制</li>
<li>本地存储支持</li>
<li>配置项管理</li>
</ul>
</li>
<li>插件功能<ul>
<li>命令处理</li>
<li>数据持久化</li>
<li>日志记录</li>
<li>API调用</li>
</ul>
</li>
<li>内置插件<ul>
<li>每日签到</li>
<li>百度百科</li>
</ul>
</li>
<li>开发支持<ul>
<li>完整API文档</li>
<li>示例代码</li>
<li>开发指南</li>
</ul>
</li>
</ul>
<h3 id="5-通知系统"><a href="#5-通知系统" class="headerlink" title="5. 通知系统"></a>5. 通知系统</h3><ul>
<li>消息通知<ul>
<li>新消息提醒</li>
<li>@消息特殊提示</li>
<li>消息合并显示</li>
<li>通知延迟处理</li>
</ul>
</li>
<li>通知管理<ul>
<li>是否开启通知</li>
<li>是否震动提醒</li>
<li>是否系统通知</li>
<li>免打扰设置</li>
</ul>
</li>
<li>通知优化<ul>
<li>消息去重</li>
<li>批量处理</li>
<li>智能延迟</li>
<li>性能优化</li>
</ul>
</li>
</ul>
<h2 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h2><h3 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h3><ul>
<li>Android 5.0+</li>
<li>网络连接</li>
<li>存储空间 &gt;= 50MB</li>
<li>通知权限(可选)</li>
<li>后台运行权限(推荐)</li>
</ul>
<h3 id="权限说明"><a href="#权限说明" class="headerlink" title="权限说明"></a>权限说明</h3><ol>
<li><p>必需权限</p>
<ul>
<li>网络访问</li>
<li>存储读写</li>
<li>后台运行</li>
</ul>
</li>
<li><p>可选权限</p>
<ul>
<li>通知显示</li>
<li>开机自启</li>
<li>震动控制</li>
</ul>
</li>
</ol>
<h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><ol>
<li><p>下载安装</p>
<ul>
<li>从Release页面下载最新APK</li>
<li>允许安装未知来源应用</li>
<li>按提示完成安装</li>
</ul>
</li>
<li><p>首次配置</p>
<ul>
<li>授予必要权限</li>
<li>登录机器人账号</li>
<li>配置基本设置</li>
</ul>
</li>
</ol>
<h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><h3 id="1-登录配置"><a href="#1-登录配置" class="headerlink" title="1. 登录配置"></a>1. 登录配置</h3><h4 id="1-1-获取凭据"><a href="#1-1-获取凭据" class="headerlink" title="1.1 获取凭据"></a>1.1 获取凭据</h4><ol>
<li>访问<a href="https://q.qq.com">QQ机器人管理平台</a></li>
<li>创建/选择机器人</li>
<li>获取App ID和Token</li>
<li>确认机器人状态正常</li>
</ol>
<h4 id="1-2-登录设置"><a href="#1-2-登录设置" class="headerlink" title="1.2 登录设置"></a>1.2 登录设置</h4><ol>
<li>输入App ID和Token</li>
<li>选择环境(沙盒/正式)</li>
<li>设置自动登录(可选)</li>
<li>配置安全选项</li>
</ol>
<h3 id="2-频道操作"><a href="#2-频道操作" class="headerlink" title="2. 频道操作"></a>2. 频道操作</h3><h4 id="2-1-查看频道"><a href="#2-1-查看频道" class="headerlink" title="2.1 查看频道"></a>2.1 查看频道</h4><ol>
<li><p>打开频道列表</p>
<ul>
<li>点击顶部频道信息展开列表</li>
<li>查看分组和子频道</li>
<li>观察在线人数和状态</li>
</ul>
</li>
<li><p>频道分类</p>
<ul>
<li>文字频道(#)</li>
<li>语音频道(🔊)</li>
<li>直播频道(📺)</li>
<li>公告频道(📢)</li>
<li>应用频道(💬)</li>
<li>论坛频道(🎮)</li>
</ul>
</li>
<li><p>未读消息</p>
<ul>
<li>红点显示未读数</li>
<li>橙色标记@消息</li>
<li>点击清除未读</li>
</ul>
</li>
</ol>
<h4 id="2-2-消息管理"><a href="#2-2-消息管理" class="headerlink" title="2.2 消息管理"></a>2.2 消息管理</h4><ol>
<li><p>发送消息</p>
<ul>
<li>在输入框输入内容</li>
<li>点击发送按钮</li>
<li>等待发送状态</li>
<li>查看审核结果</li>
</ul>
</li>
<li><p>消息操作</p>
<ul>
<li>长按消息显示菜单</li>
<li>选择撤回等操作</li>
<li>查看消息详情</li>
</ul>
</li>
<li><p>消息状态</p>
<ul>
<li>正常消息</li>
<li>审核中(灰色)</li>
<li>审核拒绝(红色)</li>
<li>已撤回(灰色斜体)</li>
</ul>
</li>
</ol>
<h3 id="3-插件使用"><a href="#3-插件使用" class="headerlink" title="3. 插件使用"></a>3. 插件使用</h3><h4 id="3-1-插件管理"><a href="#3-1-插件管理" class="headerlink" title="3.1 插件管理"></a>3.1 插件管理</h4><ol>
<li><p>内置插件</p>
<ul>
<li>每日签到(/签到)</li>
<li>百度百科(/百科)</li>
</ul>
</li>
<li><p>插件控制</p>
<ul>
<li>启用/禁用插件</li>
<li>查看插件信息</li>
<li>管理插件数据</li>
</ul>
</li>
</ol>
<h4 id="3-2-插件命令"><a href="#3-2-插件命令" class="headerlink" title="3.2 插件命令"></a>3.2 插件命令</h4><ol>
<li><p>命令格式</p>
<ul>
<li>以/开头</li>
<li>严格匹配命令名</li>
<li>空格分隔参数</li>
</ul>
</li>
<li><p>使用示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/签到              # 执行签到</span><br><span class="line">/百科 太阳         # 查询百科</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="4-通知设置"><a href="#4-通知设置" class="headerlink" title="4. 通知设置"></a>4. 通知设置</h3><h4 id="4-1-通知选项"><a href="#4-1-通知选项" class="headerlink" title="4.1 通知选项"></a>4.1 通知选项</h4><ol>
<li><p>基本设置</p>
<ul>
<li>启用通知</li>
<li>震动提醒</li>
<li>系统通知</li>
</ul>
</li>
<li><p>通知规则</p>
<ul>
<li>新消息延迟2秒</li>
<li>多条消息合并</li>
<li>@消息立即提醒</li>
<li>非当前频道通知</li>
</ul>
</li>
</ol>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1-连接问题"><a href="#1-连接问题" class="headerlink" title="1. 连接问题"></a>1. 连接问题</h3><ul>
<li>问题: 无法连接或频繁断开</li>
<li>解决: <ol>
<li>检查网络连接</li>
<li>确认Token正确</li>
<li>查看机器人状态</li>
<li>等待自动重连</li>
</ol>
</li>
</ul>
<h3 id="2-消息问题"><a href="#2-消息问题" class="headerlink" title="2. 消息问题"></a>2. 消息问题</h3><ul>
<li>问题: 消息发送失败</li>
<li>解决:<ol>
<li>检查频道权限</li>
<li>确认消息格式</li>
<li>等待审核通过</li>
<li>查看错误提示</li>
</ol>
</li>
</ul>
<h3 id="3-插件问题"><a href="#3-插件问题" class="headerlink" title="3. 插件问题"></a>3. 插件问题</h3><ul>
<li>问题: 插件无响应</li>
<li>解决:<ol>
<li>检查插件状态</li>
<li>确认命令格式</li>
<li>查看错误日志</li>
<li>重启应用</li>
</ol>
</li>
</ul>
<h3 id="4-通知问题"><a href="#4-通知问题" class="headerlink" title="4. 通知问题"></a>4. 通知问题</h3><ul>
<li>问题: 收不到通知</li>
<li>解决:<ol>
<li>检查通知权限</li>
<li>确认通知设置</li>
<li>关闭省电模式</li>
<li>允许后台运行</li>
</ol>
</li>
</ul>
<h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><h3 id="v1-1-0-2024-01-20"><a href="#v1-1-0-2024-01-20" class="headerlink" title="v1.1.0 (2024-01-20)"></a>v1.1.0 (2024-01-20)</h3><ul>
<li>优化WebSocket连接</li>
<li>改进消息处理逻辑</li>
<li>完善插件系统</li>
<li>优化通知机制</li>
<li>修复已知问题</li>
</ul>
<h3 id="v1-0-0-2023-12-25"><a href="#v1-0-0-2023-12-25" class="headerlink" title="v1.0.0 (2023-12-25)"></a>v1.0.0 (2023-12-25)</h3><ul>
<li>首次发布</li>
<li>基础功能实现</li>
<li>插件系统支持</li>
<li>通知系统集成</li>
</ul>
<h2 id="更多待补充"><a href="#更多待补充" class="headerlink" title="更多待补充"></a>更多待补充</h2><p>么么哒~~</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>QQ</tag>
        <tag>QQ频道</tag>
        <tag>QQ机器人</tag>
        <tag>使用文档</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓版QQ频道机器人APP客户端插件开发指南</title>
    <url>/2024/12/19/qqch-bot-plugin/</url>
    <content><![CDATA[<p>本文档将指导您如何为QQ频道机器人客户端开发插件。</p>
<h2 id="插件结构"><a href="#插件结构" class="headerlink" title="插件结构"></a>插件结构</h2><p>每个插件都是一个标准的 JavaScript 文件，需要导出一个包含以下字段的对象:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 插件对象</span></span><br><span class="line"><span class="keyword">const</span> plugin = &#123;</span><br><span class="line">  <span class="comment">// 基本信息(必需)</span></span><br><span class="line">  <span class="attr">id</span>: <span class="string">&#x27;plugin-id&#x27;</span>,          <span class="comment">// 插件ID,只能包含小写字母、数字、下划线和横线</span></span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;插件名称&#x27;</span>,         <span class="comment">// 插件显示名称</span></span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;插件描述&#x27;</span>,  <span class="comment">// 插件功能描述</span></span><br><span class="line">  <span class="attr">command</span>: <span class="string">&#x27;/命令&#x27;</span>,         <span class="comment">// 触发命令,必须以/开头</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 基本信息(可选)</span></span><br><span class="line">  <span class="attr">version</span>: <span class="string">&#x27;1.0.0&#x27;</span>,        <span class="comment">// 插件版本号</span></span><br><span class="line">  <span class="attr">author</span>: <span class="string">&#x27;作者名称&#x27;</span>,      <span class="comment">// 插件作者</span></span><br><span class="line">  <span class="attr">enabled</span>: <span class="literal">true</span>,           <span class="comment">// 插件是否启用</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 配置项(可选)</span></span><br><span class="line">  <span class="attr">config</span>: &#123;</span><br><span class="line">    <span class="comment">// 插件的配置项</span></span><br><span class="line">    <span class="attr">minPoints</span>: <span class="number">10</span>,         <span class="comment">// 示例:最小积分</span></span><br><span class="line">    <span class="attr">maxPoints</span>: <span class="number">100</span>,        <span class="comment">// 示例:最大积分</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 数据存储(可选)</span></span><br><span class="line">  <span class="attr">storage</span>: &#123;</span><br><span class="line">    <span class="comment">// 插件的数据存储</span></span><br><span class="line">    <span class="attr">records</span>: <span class="keyword">new</span> <span class="title class_">Map</span>()     <span class="comment">// 示例:记录存储</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 消息处理函数(必需)</span></span><br><span class="line">  <span class="attr">handler</span>: <span class="title function_">async</span> (message, channel, context) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 返回值:</span></span><br><span class="line">    <span class="comment">// - 字符串: 要发送的回复消息</span></span><br><span class="line">    <span class="comment">// - null/undefined: 不发送回复</span></span><br><span class="line">    <span class="comment">// - Promise&lt;string&gt;: 异步返回回复消息</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;回复消息&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出插件</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = plugin</span><br></pre></td></tr></table></figure>

<h2 id="API-说明"><a href="#API-说明" class="headerlink" title="API 说明"></a>API 说明</h2><h3 id="1-消息对象-message"><a href="#1-消息对象-message" class="headerlink" title="1. 消息对象(message)"></a>1. 消息对象(message)</h3>  <span id="more"></span>

<p>消息对象包含了消息的完整信息：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="string">&quot;消息ID&quot;</span>,</span><br><span class="line">  <span class="attr">channel_id</span>: <span class="string">&quot;频道ID&quot;</span>, </span><br><span class="line">  <span class="attr">guild_id</span>: <span class="string">&quot;服务器ID&quot;</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="string">&quot;消息内容&quot;</span>,</span><br><span class="line">  <span class="attr">cleanContent</span>: <span class="string">&quot;去除命令前缀的消息内容&quot;</span>, <span class="comment">// 新增:清理后的内容</span></span><br><span class="line">  <span class="attr">timestamp</span>: <span class="string">&quot;2023-01-01T00:00:00.000Z&quot;</span>,</span><br><span class="line">  <span class="attr">status</span>: <span class="string">&quot;normal&quot;</span>, <span class="comment">// 消息状态: normal-正常, auditing-审核中, rejected-审核拒绝</span></span><br><span class="line">  <span class="attr">author</span>: &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;用户ID&quot;</span>,</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&quot;用户名&quot;</span>,</span><br><span class="line">    <span class="attr">bot</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">avatar</span>: <span class="string">&quot;头像URL&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">member</span>: &#123;</span><br><span class="line">    <span class="attr">roles</span>: [<span class="string">&quot;角色ID1&quot;</span>, <span class="string">&quot;角色ID2&quot;</span>],</span><br><span class="line">    <span class="attr">joined_at</span>: <span class="string">&quot;加入时间&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mentions</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;被@用户ID&quot;</span>,</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&quot;被@用户名&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">mention_everyone</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-频道对象-channel"><a href="#2-频道对象-channel" class="headerlink" title="2. 频道对象(channel)"></a>2. 频道对象(channel)</h3><p>频道对象包含了频道的基本信息：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="string">&quot;频道ID&quot;</span>,</span><br><span class="line">  <span class="attr">guild_id</span>: <span class="string">&quot;服务器ID&quot;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;频道名称&quot;</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="number">0</span>, <span class="comment">// 频道类型</span></span><br><span class="line">  <span class="attr">position</span>: <span class="number">1</span>, <span class="comment">// 显示位置</span></span><br><span class="line">  <span class="attr">parent_id</span>: <span class="string">&quot;父频道ID&quot;</span>,</span><br><span class="line">  <span class="attr">owner_id</span>: <span class="string">&quot;创建者ID&quot;</span>,</span><br><span class="line">  <span class="attr">permissions</span>: <span class="string">&quot;权限值&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-上下文对象-context"><a href="#3-上下文对象-context" class="headerlink" title="3. 上下文对象(context)"></a>3. 上下文对象(context)</h3><p>上下文对象提供了插件运行时的环境和工具：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 存储API - 持久化存储插件数据</span></span><br><span class="line">  <span class="attr">storage</span>: &#123;</span><br><span class="line">    <span class="attr">get</span>: <span class="function">(<span class="params">key</span>) =&gt;</span> value, <span class="comment">// 获取存储的值</span></span><br><span class="line">    <span class="attr">set</span>: <span class="function">(<span class="params">key, value</span>) =&gt;</span> <span class="keyword">void</span>, <span class="comment">// 设置存储的值</span></span><br><span class="line">    <span class="attr">delete</span>: <span class="function">(<span class="params">key</span>) =&gt;</span> <span class="keyword">void</span>, <span class="comment">// 删除存储的值</span></span><br><span class="line">    <span class="attr">clear</span>: <span class="function">() =&gt;</span> <span class="keyword">void</span>, <span class="comment">// 清空存储</span></span><br><span class="line">    <span class="attr">has</span>: <span class="function">(<span class="params">key</span>) =&gt;</span> boolean <span class="comment">// 检查键是否存在</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 配置API - 管理插件配置</span></span><br><span class="line">  <span class="attr">config</span>: &#123;</span><br><span class="line">    <span class="attr">get</span>: <span class="function">(<span class="params">key</span>) =&gt;</span> value, <span class="comment">// 获取配置项</span></span><br><span class="line">    <span class="attr">set</span>: <span class="function">(<span class="params">key, value</span>) =&gt;</span> <span class="keyword">void</span>, <span class="comment">// 设置配置项</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 日志API - 记录插件运行日志</span></span><br><span class="line">  <span class="attr">log</span>: &#123;</span><br><span class="line">    <span class="attr">info</span>: <span class="function">(<span class="params">message, details</span>) =&gt;</span> <span class="keyword">void</span>, <span class="comment">// 记录信息日志</span></span><br><span class="line">    <span class="attr">success</span>: <span class="function">(<span class="params">message, details</span>) =&gt;</span> <span class="keyword">void</span>, <span class="comment">// 记录成功日志</span></span><br><span class="line">    <span class="attr">warning</span>: <span class="function">(<span class="params">message, details</span>) =&gt;</span> <span class="keyword">void</span>, <span class="comment">// 记录警告日志</span></span><br><span class="line">    <span class="attr">error</span>: <span class="function">(<span class="params">message, details</span>) =&gt;</span> <span class="keyword">void</span> <span class="comment">// 记录错误日志</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 工具API</span></span><br><span class="line">  <span class="attr">api</span>: &#123;</span><br><span class="line">    <span class="comment">// 发送消息</span></span><br><span class="line">    <span class="attr">sendMessage</span>: <span class="title function_">async</span> (channelId, content, options) =&gt; &#123;</span><br><span class="line">      <span class="comment">// channelId: 频道ID</span></span><br><span class="line">      <span class="comment">// content: 消息内容</span></span><br><span class="line">      <span class="comment">// options: 可选参数</span></span><br><span class="line">      <span class="comment">//   - msg_id: 回复的消息ID</span></span><br><span class="line">      <span class="comment">//   - event_id: 事件ID</span></span><br><span class="line">      <span class="comment">// 返回:</span></span><br><span class="line">      <span class="comment">// - 成功: messageObject</span></span><br><span class="line">      <span class="comment">// - 审核: &#123; code: 304023, data: &#123; message_audit: &#123; audit_id: &quot;xxx&quot; &#125; &#125; &#125;</span></span><br><span class="line">      <span class="keyword">return</span> response</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 删除消息</span></span><br><span class="line">    <span class="attr">deleteMessage</span>: <span class="title function_">async</span> (channelId, messageId) =&gt; &#123;</span><br><span class="line">      <span class="comment">// channelId: 频道ID</span></span><br><span class="line">      <span class="comment">// messageId: 消息ID</span></span><br><span class="line">      <span class="keyword">return</span> boolean</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取成员信息</span></span><br><span class="line">    <span class="attr">getMember</span>: <span class="title function_">async</span> (guildId, userId) =&gt; &#123;</span><br><span class="line">      <span class="comment">// guildId: 服务器ID</span></span><br><span class="line">      <span class="comment">// userId: 用户ID</span></span><br><span class="line">      <span class="keyword">return</span> memberObject</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取服务器角色列表</span></span><br><span class="line">    <span class="attr">getGuildRoles</span>: <span class="title function_">async</span> (guildId) =&gt; &#123;</span><br><span class="line">      <span class="comment">// guildId: 服务器ID</span></span><br><span class="line">      <span class="keyword">return</span> rolesArray</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查权限</span></span><br><span class="line">    <span class="attr">hasPermission</span>: <span class="function">(<span class="params">permissions, permission</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// permissions: 权限值</span></span><br><span class="line">      <span class="comment">// permission: 要检查的权限</span></span><br><span class="line">      <span class="keyword">return</span> boolean</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="插件功能界面预览"><a href="#插件功能界面预览" class="headerlink" title="插件功能界面预览"></a>插件功能界面预览</h2><p><img src="/img/qqBot/log.jpg" alt="插件功能界面"></p>
<h2 id="消息处理流程"><a href="#消息处理流程" class="headerlink" title="消息处理流程"></a>消息处理流程</h2><ol>
<li><p>消息接收</p>
<ul>
<li>系统接收到新消息时，会检查消息内容是否以配置的命令前缀开始</li>
<li>解析出命令和参数</li>
<li>查找所有匹配的已启用插件</li>
</ul>
</li>
<li><p>插件执行</p>
<ul>
<li>对每个匹配的插件：<ul>
<li>创建独立的插件上下文对象</li>
<li>调用插件的handler函数</li>
<li>等待处理结果</li>
</ul>
</li>
<li>多个插件可以使用相同的命令</li>
<li>插件按照加载顺序依次执行</li>
<li>某个插件执行失败不会影响其他插件</li>
</ul>
</li>
<li><p>响应处理</p>
<ul>
<li>每个插件的handler如果返回字符串，系统会自动发送响应消息</li>
<li>每个响应都是独立的，会分别发送到频道</li>
<li>发送的消息可能进入审核状态(code: 304023)</li>
<li>审核通过或拒绝会触发相应的事件</li>
</ul>
</li>
</ol>
<h2 id="权限处理"><a href="#权限处理" class="headerlink" title="权限处理"></a>权限处理</h2><p>系统会自动计算机器人的权限：</p>
<ol>
<li><p>管理员权限</p>
<ul>
<li>频道主</li>
<li>管理员</li>
<li>超级管理员</li>
<li>子频道管理员<br>拥有以上角色时自动获得所有权限(1099511627775)</li>
</ul>
</li>
<li><p>普通权限</p>
<ul>
<li>根据角色的permissions值按位计算</li>
<li>多个角色的权限值进行按位或运算</li>
<li>可以使用api.hasPermission检查特定权限</li>
</ul>
</li>
</ol>
<h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ol>
<li><p>错误处理</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">handler</span>: <span class="title function_">async</span> (message, channel, context) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 处理逻辑</span></span><br><span class="line">    context.<span class="property">log</span>.<span class="title function_">info</span>(<span class="string">&#x27;处理成功&#x27;</span>, &#123; <span class="attr">messageId</span>: message.<span class="property">id</span> &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;成功消息&#x27;</span></span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    context.<span class="property">log</span>.<span class="title function_">error</span>(<span class="string">&#x27;处理失败&#x27;</span>, &#123; error, <span class="attr">messageId</span>: message.<span class="property">id</span> &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;处理失败，请稍后重试&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>数据持久化</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用storage API保存数据</span></span><br><span class="line"><span class="keyword">const</span> records = context.<span class="property">storage</span>.<span class="title function_">get</span>(<span class="string">&#x27;records&#x27;</span>) || &#123;&#125;</span><br><span class="line">records[userId] = &#123; <span class="comment">/* 数据 */</span> &#125;</span><br><span class="line">context.<span class="property">storage</span>.<span class="title function_">set</span>(<span class="string">&#x27;records&#x27;</span>, records)</span><br></pre></td></tr></table></figure>
</li>
<li><p>消息审核处理</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> context.<span class="property">api</span>.<span class="title function_">sendMessage</span>(channelId, content)</span><br><span class="line"><span class="keyword">if</span> (response.<span class="property">code</span> === <span class="number">304023</span>) &#123;</span><br><span class="line">  context.<span class="property">log</span>.<span class="title function_">info</span>(<span class="string">&#x27;消息进入审核&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">auditId</span>: response.<span class="property">data</span>.<span class="property">message_audit</span>.<span class="property">audit_id</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>权限检查</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!context.<span class="property">api</span>.<span class="title function_">hasPermission</span>(channel.<span class="property">permissions</span>, <span class="string">&#x27;MANAGE_MESSAGES&#x27;</span>)) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;权限不足，需要管理消息的权限&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>么么扎~~</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>QQ</tag>
        <tag>QQ频道</tag>
        <tag>QQ机器人</tag>
        <tag>开发文档</tag>
      </tags>
  </entry>
  <entry>
    <title>uni-app实现本地通知栏消息推送(不使用第三方插件)的知识点和一些坑</title>
    <url>/2023/09/08/uni_push/</url>
    <content><![CDATA[<h1 id="PUSH模块"><a href="#PUSH模块" class="headerlink" title="PUSH模块"></a>PUSH模块</h1><p>uni-app已经集成push服务，这是一个包括客户端和服务器的统一服务，整合了苹果APNs、华为、小米、OPPO、VIVO、魅族、谷歌FCM等多家厂商的系统推送和个推的独立推送，不管客户端还是服务器，一套代码多端推送。</p>
<p>并且只需要简单的到项目配置文件manifest.json模块项中勾选一下即可使用。</p>
<h2 id="坑：未添加PUSH模块"><a href="#坑：未添加PUSH模块" class="headerlink" title="坑：未添加PUSH模块"></a>坑：未添加PUSH模块</h2><p><img src="/img/uniPUSH/02.jpg" alt="未添加PUSH模块"></p>
<p>这个问题很奇怪，不管是云打包正式版，还是打包测试基座什么的，一直都是提示这个。</p>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>这个问题虽然很奇怪，但是也很简单，只需要在项目配置文件manifest.json勾选push模块后，重新打包一次测试基座。</p>
<span id="more"></span>

<h2 id="push模块2-0"><a href="#push模块2-0" class="headerlink" title="push模块2.0"></a>push模块2.0</h2><p>push2.0比1.0升级之处在于：</p>
<p>1.支持5+全端推送；</p>
<p>2.不使用后端集成个推api，只需要将云函数url化，给后端这个url就行；</p>
<p>3.还是要集成各大厂商的SDK，这点是和1.0一模一样的。</p>
<p>4.要调用云函数（收费），虽然不是很贵，但是只是为了推送个通知消息就要再买一个云服务器，有点无语住。。。</p>
<p>今天只是讲讲push1.0的实现本地通知，就不谈服务器得了。</p>
<p>勾选了PUSH模块后，点击配置按钮，会自动跳转到uni-app的网页端应用设置页，在上面配置一下自己的应用开通一下push即可。</p>
<p><img src="/img/uniPUSH/01.png" alt="勾选PUSH模块"></p>
<h2 id="判断是否开启通知权限"><a href="#判断是否开启通知权限" class="headerlink" title="判断是否开启通知权限"></a>判断是否开启通知权限</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">enablPermission()&#123;</span><br><span class="line">	let main = plus.android.runtimeMainActivity();</span><br><span class="line">	let pkName = main.getPackageName();</span><br><span class="line">	let uid = main.getApplicationInfo().plusGetAttribute(&quot;uid&quot;);</span><br><span class="line">	let NotificationManagerCompat = plus.android.importClass(&quot;android.support.v4.app.NotificationManagerCompat&quot;);</span><br><span class="line">	//android.support.v4升级为androidx</span><br><span class="line">	if (NotificationManagerCompat == null) &#123;</span><br><span class="line">		NotificationManagerCompat = plus.android.importClass(&quot;androidx.core.app.NotificationManagerCompat&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	let areNotificationsEnabled = NotificationManagerCompat.from(main).areNotificationsEnabled();</span><br><span class="line">	// 未开通‘允许通知&#x27;权限，则弹窗提醒开通，并点击确认后，跳转到系统设置页面进行设置  </span><br><span class="line">	if (!areNotificationsEnabled) &#123;</span><br><span class="line">		uni.showModal(&#123;</span><br><span class="line">			title: &#x27;通知权限开启提醒&#x27;,</span><br><span class="line">			content: &#x27;您还没有开启通知权限，无法接受到消息通知，请前往设置！&#x27;,</span><br><span class="line">			showCancel: false,</span><br><span class="line">			confirmText: &#x27;去设置&#x27;,</span><br><span class="line">			success: function(res) &#123;</span><br><span class="line">				if (res.confirm) &#123;</span><br><span class="line">					let Intent = plus.android.importClass(&#x27;android.content.Intent&#x27;);</span><br><span class="line">					let Build = plus.android.importClass(&quot;android.os.Build&quot;);</span><br><span class="line">					//android 8.0引导  </span><br><span class="line">					if (Build.VERSION.SDK_INT &gt;= 26) &#123;</span><br><span class="line">						let intent = new Intent(&#x27;android.settings.APP_NOTIFICATION_SETTINGS&#x27;);</span><br><span class="line">						intent.putExtra(&#x27;android.provider.extra.APP_PACKAGE&#x27;, pkName);</span><br><span class="line">					&#125; else if (Build.VERSION.SDK_INT &gt;= 21) &#123; //android 5.0-7.0  </span><br><span class="line">						let intent = new Intent(&#x27;android.settings.APP_NOTIFICATION_SETTINGS&#x27;);</span><br><span class="line">						intent.putExtra(&quot;app_package&quot;, pkName);</span><br><span class="line">						intent.putExtra(&quot;app_uid&quot;, uid);</span><br><span class="line">					&#125; else &#123; //(&lt;21)其他--跳转到该应用管理的详情页  </span><br><span class="line">						intent.setAction(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);</span><br><span class="line">						let uri = Uri.fromParts(&quot;package&quot;, mainActivity.getPackageName(), null);</span><br><span class="line">						intent.setData(uri);</span><br><span class="line">					&#125;</span><br><span class="line">					// 跳转到该应用的系统通知设置页  </span><br><span class="line">					main.startActivity(intent);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="实现本地消息的推送"><a href="#实现本地消息的推送" class="headerlink" title="实现本地消息的推送"></a>实现本地消息的推送</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">let content = &quot;您有一条新的消息~&quot;;</span><br><span class="line">let options = &#123;</span><br><span class="line">	&quot;cover&quot; : false,</span><br><span class="line">	&quot;when&quot; : new Date(),</span><br><span class="line">	&#x27;title&#x27; : &quot;通知消息&quot;</span><br><span class="line">&#125;;</span><br><span class="line">let body = &#123;</span><br><span class="line">	&#x27;id&#x27; : &#x27;id&#x27;,</span><br><span class="line">	&#x27;key&#x27;: &quot;key&quot;</span><br><span class="line">&#125;</span><br><span class="line">let payload = JSON.stringify(body);</span><br><span class="line">plus.push.createMessage(content, payload, options);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>各项参数说明：<br><code>content</code>: ( String 类型) 必选，消息显示的内容，在系统通知中心中显示的文本内容。<br><code>payload</code>: ( String 类型 ) 可选，消息承载的数据，可根据业务逻辑自定义数据格式。<br><code>option</code>: ( MessageOptions ) 可选 创建消息的额外参数，参考MessageOptions。<br><code>MessageOptions</code>：JSON对象，获客户端创建本地消息的参数：<br>    ① title: (String 类型 )推送消息的标题。<br>    ② sound: (String 类型 )推送消息的提示音，显示消息时的播放的提示音，可取值：<br>        “system”-表示使用系统通知提示音； “none”-表示不使用提示音； 默认值为“system”。<br>    ③ cover: (Boolean 类型)是否覆盖上一次提示的消息。<br>        可取值true或false，true为覆盖，false不覆盖<br>    ④ when: (Date 类型 )消息上显示的提示时间。<br>    ⑤ delay: (Number 类型)提示消息延迟显示的时间。<br>        当设备接收到推送消息后，可不立即显示，而是延迟一段时间显示，延迟时间单位为s，默认为0s，立即显示。</p>
<h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><h3 id="获取所有信息"><a href="#获取所有信息" class="headerlink" title="获取所有信息"></a>获取所有信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">getAllMessage()&#123;</span><br><span class="line"> 	return plus.push.getAllMessage();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="获取客户端标识"><a href="#获取客户端标识" class="headerlink" title="获取客户端标识"></a>获取客户端标识</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plus.push.getClientInfo(); </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="捕获点击的通知栏消息内容"><a href="#捕获点击的通知栏消息内容" class="headerlink" title="捕获点击的通知栏消息内容"></a>捕获点击的通知栏消息内容</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plus.push.addEventListener( &quot;click&quot;, function(msg)&#123;</span><br><span class="line">	console.log( &quot;您点击了: &quot; + JSON.stringify(msg) );</span><br><span class="line">	// TODO...</span><br><span class="line">&#125;, false); </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="删除指定的通知栏消息"><a href="#删除指定的通知栏消息" class="headerlink" title="删除指定的通知栏消息"></a>删除指定的通知栏消息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plus.push.remove( message ); </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>参数：message: ( PushMessage ) 必填,要删除的消息对象，可通过getAllMessage()方法来获取消息。</p>
<h3 id="清空所有的通知栏消息"><a href="#清空所有的通知栏消息" class="headerlink" title="清空所有的通知栏消息"></a>清空所有的通知栏消息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plus.push.clear(); </span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>新的知识又增加了~</p>
<p>感谢阅读。</p>
<p>么么哒~~</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>知识点</tag>
        <tag>Android</tag>
        <tag>uniapp</tag>
      </tags>
  </entry>
  <entry>
    <title>使用vercel和github免费实现serverless api接口服务部署</title>
    <url>/2023/07/24/github_api/</url>
    <content><![CDATA[<h1 id="vercel"><a href="#vercel" class="headerlink" title="vercel"></a>vercel</h1><h2 id="简单介绍一下vercel"><a href="#简单介绍一下vercel" class="headerlink" title="简单介绍一下vercel"></a>简单介绍一下vercel</h2><p>vercel和github Pages一样，也是一个免费的托管平台，同类的平台还有Netlify，提供CDN加速。</p>
<p>但是在相比之下，vercel在国内的访问速度更快，可以托管动态网站，并且提供Production环境和development环境。</p>
<p>支持持续集成，一次push就会自动化构建发布，发布在development环境，都会生成不一样的链接可供预览。</p>
<p>自动配置https，不用自己去FreeSSL申请证书，更是省去了一大堆证书的配置，可以绑定自定义域名。</p>
<h2 id="注册vercel"><a href="#注册vercel" class="headerlink" title="注册vercel"></a>注册vercel</h2><p>打开vercel主页 <a href="https://vercel.com/login">https://vercel.com/login</a></p>
<p><img src="/img/vercel/01.png" alt="注册vercel"></p>
<span id="more"></span>


<p>使用GitHub账号去登录关联vercel，后续部署在github的代码就可以自动提交到vercel，自动触发部署。</p>
<h2 id="同步github项目和部署"><a href="#同步github项目和部署" class="headerlink" title="同步github项目和部署"></a>同步github项目和部署</h2><p>新建vercel项目</p>
<p><img src="/img/vercel/02.png" alt="新建vercel项目02"></p>
<p>如何点击绑定github仓库，会自动读取github的所有仓库，选择你要自动部署的仓库，点击Import即可导入，一路点击Deploy即可。</p>
<p><img src="/img/vercel/03.png" alt="新建vercel项目03"></p>
<p>等个几分钟自动部署完毕之后，就可以点击Visit访问部署的网站了，vercel还提供了多个开发预览域名和公开域名。</p>
<p><img src="/img/vercel/04.png" alt="新建vercel项目04"></p>
<p>你也可以绑定自定义域名：</p>
<p><img src="/img/vercel/05.png" alt="新建vercel项目05"></p>
<p>点击vercel项目的Setting设置栏目的Domains选项，在输入框输入你的域名，如何点击Add添加即可，最后把域名用CNAME方式解析到vercel指定的DNS地址即可完成自定义域名的绑定。</p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="添加vercel-json"><a href="#添加vercel-json" class="headerlink" title="添加vercel.json"></a>添加vercel.json</h2><p>要实现可以访问执行php，需要在项目的根目录添加一个vercel.json文件。</p>
<p>大致格式为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;functions&quot;: &#123;</span><br><span class="line">    &quot;api/index.php&quot;: &#123; &quot;runtime&quot;: &quot;vercel-php@0.5.2&quot; &#125;,</span><br><span class="line">    &quot;api/api.php&quot;: &#123; &quot;runtime&quot;: &quot;vercel-php@0.5.2&quot; &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;routes&quot;: [</span><br><span class="line">	  &#123; &quot;src&quot;: &quot;/&quot;, &quot;dest&quot;: &quot;/api/index.php&quot; &#125;,</span><br><span class="line">	  &#123; &quot;src&quot;: &quot;/index.php&quot;, &quot;dest&quot;: &quot;/api/index.php&quot; &#125;,</span><br><span class="line">	  &#123; &quot;src&quot;: &quot;/api.php&quot;, &quot;dest&quot;: &quot;/api/api.php&quot; &#125;</span><br><span class="line">	]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以使用正则表达式，更多配置参数可以在vercel的官网档案中查找，地址为 <a href="https://vercel.com/docs">https://vercel.com/docs</a></p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>新的知识又增加了~</p>
<p>感谢阅读。</p>
<p>么么哒~~</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>vercel</tag>
        <tag>github</tag>
        <tag>api</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity一些常用的小知识点笔记，WebGL部署报Unable to parse Build解决笔记</title>
    <url>/2023/03/28/unity_note/</url>
    <content><![CDATA[<h1 id="Unity知识点一"><a href="#Unity知识点一" class="headerlink" title="Unity知识点一"></a>Unity知识点一</h1><h2 id="Unity打包WebGL报Unable-to-parse-Build"><a href="#Unity打包WebGL报Unable-to-parse-Build" class="headerlink" title="Unity打包WebGL报Unable to parse Build"></a>Unity打包WebGL报Unable to parse Build</h2><p>错误详情示例：</p>
<p>Unable to parse Build/*.framework.js.gz! This can happen if build compression was enabled but web server hosting the content was misconfigured to not serve the file with HTTP Response Header “Content-Encoding: gzip” present. Check browser Console and Devtools Network tab to debug.</p>
<p>图示：</p>
<p><img src="/img/unityNote/error.png" alt="unityError"></p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><span id="more"></span>

<p>在Unity的WebGL创建时的PlayerSettings中，拉到最下面展开Publishing settings选项卡，把Decompression Fallback 选项勾上即可。</p>
<p>图示：</p>
<p><img src="/img/unityNote/setting.png" alt="unitysetting"></p>
<h2 id="原因和原理"><a href="#原因和原理" class="headerlink" title="原因和原理"></a>原因和原理</h2><p>关于Decompression Fallback的unity官方的解释：</p>
<p><img src="/img/unityNote/tip.png" alt="unityTip"></p>
<p>参考翻译：在加载程序中包括生成文件的解压缩回退代码。如果无法根据选定的压缩方法配置服务器响应标头，请使用此选项。</p>
<h1 id="Unity知识点二"><a href="#Unity知识点二" class="headerlink" title="Unity知识点二"></a>Unity知识点二</h1><h2 id="一些常用的小知识"><a href="#一些常用的小知识" class="headerlink" title="一些常用的小知识"></a>一些常用的小知识</h2><h3 id="随机数生成"><a href="#随机数生成" class="headerlink" title="随机数生成"></a>随机数生成</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Random.Range(0, 10); //随机生成0到10之间的整数。不包含10</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="在指定位置生成物体-小怪-道具等"><a href="#在指定位置生成物体-小怪-道具等" class="headerlink" title="在指定位置生成物体/小怪/道具等"></a>在指定位置生成物体/小怪/道具等</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Instantiate&lt;GameObject&gt;(obj, position, Quaternion.identity);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>obj : 要新建物体/小怪/道具的GameObject</p>
<p>position：生成的位置</p>
<h3 id="2D角色转向"><a href="#2D角色转向" class="headerlink" title="2D角色转向"></a>2D角色转向</h3><p> 利用SpriteRenderer组件下的flipX属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">GetComponent&lt;SpriteRenderer&gt;().flipX = true;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>或使用transform的localScale属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">transform.localScale = new Vector3(-1, 1, 1);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="角色从一个点移动到另一点"><a href="#角色从一个点移动到另一点" class="headerlink" title="角色从一个点移动到另一点"></a>角色从一个点移动到另一点</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">transform.position = Vector3.MoveTowards(startPosition, endPosition, Time.deltaTime * speed); </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="计算两个点的距离"><a href="#计算两个点的距离" class="headerlink" title="计算两个点的距离"></a>计算两个点的距离</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">float dis = Vector3.Distance(startPosition, endPosition);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="查找物体和子物体"><a href="#查找物体和子物体" class="headerlink" title="查找物体和子物体"></a>查找物体和子物体</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">//查找物体方法</span><br><span class="line">GameObject go = GameObject.Find(&quot;Cube&quot;);</span><br><span class="line"></span><br><span class="line">//查找子物体，并且将得到的物体转换成gameobject</span><br><span class="line">GameObject objname = go.transform.FindChild(&quot;Sphere/Cylinder/Plane&quot;).gameObject;</span><br><span class="line">Debug.Log(&quot;得到最终子物体的名字是：&quot; + objname.name);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="重新加载当前场景"><a href="#重新加载当前场景" class="headerlink" title="重新加载当前场景"></a>重新加载当前场景</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">SceneManager.LoadScene(SceneManager.GetActiveScene().name);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="加载下一个场景"><a href="#加载下一个场景" class="headerlink" title="加载下一个场景"></a>加载下一个场景</h3><p>需要先在构建项目前，在设置中把所有的场景一次拖入列表中，从上到下顺序排列。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex + 1);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>新的知识又又又增加了~</p>
<p>感谢阅读。</p>
<p>么么哒~~</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Unity</tag>
        <tag>WebGL</tag>
      </tags>
  </entry>
  <entry>
    <title>修改JS数组中一个元素的值，其它元素也会跟着变化</title>
    <url>/2023/03/13/js-array/</url>
    <content><![CDATA[<h1 id="js的神奇"><a href="#js的神奇" class="headerlink" title="js的神奇"></a>js的神奇</h1><h2 id="知识点问题复现"><a href="#知识点问题复现" class="headerlink" title="知识点问题复现"></a>知识点问题复现</h2><p>今天在码着代码调试的时候，根据条件判断将一个数组的一个元素值进行增或者减的操作，结果发现，数组中的其它元素也都跟着变了。</p>
<p>第一次碰见这种情况，检查了好几遍代码也没感觉哪里有写错，有点一头雾水，甚至写了各种小demo调试。</p>
<p>最后发现，是关于js的堆与栈问题…</p>
<p>示例代码：</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">var d = [</span><br><span class="line">	&#123;</span><br><span class="line">			a: 1</span><br><span class="line">	&#125;,</span><br><span class="line">	&#123;</span><br><span class="line">			a: 2</span><br><span class="line">	&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">d[2].a = 100;</span><br><span class="line">console.log(d);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>按照我们通常的认知里，上述代码执行的结果应该是是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[&#123;a:1&#125;,&#123;a:100&#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>而实际上的执行结果却是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[&#123;a:100&#125;,&#123;a:100&#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>很奇怪吧~</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>先把数组转换成字符串，再转换成对象，在进行数据修改，最后再赋值回去。</p>
<p>代码示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">var d = [</span><br><span class="line">	&#123;</span><br><span class="line">			a: 1</span><br><span class="line">	&#125;,</span><br><span class="line">	&#123;</span><br><span class="line">			a: 2</span><br><span class="line">	&#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">var tmp = JSON.parse(JSON.stringify(d));</span><br><span class="line">tmp[2].a = 100;</span><br><span class="line">d = tmp;</span><br><span class="line">console.log(d);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="原因和原理"><a href="#原因和原理" class="headerlink" title="原因和原理"></a>原因和原理</h2><p>js中的数组是引用类型，数组变量存储在栈，元素数据存储在堆中，将数组赋值不同的对象，所以的赋值对象都指向堆同一个数据，所以改变其中一个数组中的元素，别的数组元素也会改变。</p>
<p>把数组转换成字符串，再转换成对象，这样会新分配一块内存，就不会指向同一个堆中的数据了。</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>新的知识又增加了~</p>
<p>感谢阅读。</p>
<p>么么哒~~</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>JScript</tag>
        <tag>大前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序的审核没有统一标准吗？真的太奇葩了...</title>
    <url>/2023/02/28/wx-mini/</url>
    <content><![CDATA[<h1 id="审核没有统一的标准"><a href="#审核没有统一的标准" class="headerlink" title="审核没有统一的标准"></a>审核没有统一的标准</h1><h2 id="审核规则"><a href="#审核规则" class="headerlink" title="审核规则"></a>审核规则</h2><p>微信小程序的审核机制，虽然写了超级多的规范，也把个人和企业能够上线的类目细分出了很多</p>
<p>但是审核人员貌似每个都不一样</p>
<p>有时候一样的代码，你这次没有做什么修改，就改个css样式，这次去提审可能就过不了</p>
<span id="more"></span>

<p>有人说 “可能是你上次提审的版本，审核人员没有审到违规的内容，这次审到了”</p>
<p>基本上很大部分开发者都接受了这个理由。</p>
<p>还有一个理由说的事：可能你这次提审的时候平台规则改版了</p>
<h2 id="依旧奇怪的现象"><a href="#依旧奇怪的现象" class="headerlink" title="依旧奇怪的现象"></a>依旧奇怪的现象</h2><p>虽然上面说的两个理由都很有道理，但是还是有这种现象：</p>
<p>同一套代码，多个账号同一天提交，偏偏就有那么一个或两个审核打回说你不通过得</p>
<p>这几就很充分说明一个事情，审核真的很看心情（起码占了狠大部分）。</p>
<p>如果你的账号是个人类型的账号，很大部分都被以</p>
<p> <code>个人资质未开放的类目</code></p>
<p>原因打回，希望你用认证为企业资质的账号提交。</p>
<p>我很纳闷，一个给游戏橘角色投票的页面，也会被打回，说是 </p>
<p> <code>属于资讯信息类目，个人资质未开放的类目，请整改</code></p>
<p>这是以本地自搭形式的投票，并非读取的网络资源或信息进行展示，也能规范为“资讯信息”类目</p>
<p>之前我还记得，审核不通过是可以进行申诉的，今天遇到的打回通知完全没有了，莫不是给我禁了？</p>
<p>反正就挺无语的。</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>今天被小程序审核打回四五次，整的有点晕，随便吐槽吐槽</p>
<p>感谢阅读。</p>
<p>么么哒~~</p>
]]></content>
      <categories>
        <category>吐槽</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>吐槽</tag>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>避坑：小程序canvas绘制不显示，动态请求图片报Unhandled promise rejection错误解决</title>
    <url>/2023/02/22/wx-xcx-canvas/</url>
    <content><![CDATA[<h1 id="Unhandled-promise-rejection错误"><a href="#Unhandled-promise-rejection错误" class="headerlink" title="Unhandled promise rejection错误"></a>Unhandled promise rejection错误</h1><h2 id="报错详情"><a href="#报错详情" class="headerlink" title="报错详情"></a>报错详情</h2><p>使用网络图片地址请求时，后台数据有正常返回，但前端promise处理报错。</p>
<p>例如图片链接失效出现404时，一报错的时候，就不继续往下执行后面的代码</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><span id="more"></span>

<p>request.js的封装请求是当后台请求的status码不为200时，将会reject错误信息出去</p>
<p>reject函数并不会走入promise的then进行回调中，而是走入了catch的回调中：</p>
<p><img src="/img/wxCanvas/02.png" alt="promise回调"></p>
<p>再看看请求时的调用情况：</p>
<p><img src="/img/wxCanvas/03.png" alt="promise回调"></p>
<p>可以看到，在使用请求时并未catch错误信息，那么当后台的数据返回的status不为200时，错误信息就无法捕获，自然控制台就报错了。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p><img src="/img/wxCanvas/04.png" alt="promise回调"></p>
<p>加一个catch来捕捉错误信息即可完美解决。</p>
<h1 id="canvas绘制的图片不显示"><a href="#canvas绘制的图片不显示" class="headerlink" title="canvas绘制的图片不显示"></a>canvas绘制的图片不显示</h1><h2 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h2><p>例如在页面上使用的图片均为上传到服务器上的图片</p>
<p>然后使用绘制函数draw()将网络图片绘制到canvas容器里</p>
<p>打开真机调试发现canvas上的图片内容并不显示~</p>
<h2 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h2><p>绘制时获取图片路径为网络图片时，API为异步操作的，若不转为同步操作，会将图片绘制在draw()方法后，这样是不能使图片绘制在页面上的。</p>
<h2 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法"></a>解决方法</h2><p>利用promise将其转为同步操作，等图片载入完毕再绘制到canvas里。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">getImge(path) &#123;</span><br><span class="line">	//利用promise异步转同步</span><br><span class="line">	return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">		uni.getImageInfo(&#123;</span><br><span class="line">			src: path,</span><br><span class="line">			success: function(res) &#123;</span><br><span class="line">				resolve(res)</span><br><span class="line">			&#125;,</span><br><span class="line">			fail: function(res) &#123;</span><br><span class="line">				reject(res)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">async cans() &#123;</span><br><span class="line">	// 绘制画布大小，填充颜色</span><br><span class="line">	this.ctx.setFillStyle(&quot;#ffffff&quot;)</span><br><span class="line">	this.ctx.fillRect(0, 0, this.windowW * this.pixelRatio, this.windowH * this.pixelRatio)</span><br><span class="line">	this.ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0)</span><br><span class="line">	let backImg = this.imgUrlPrefix + &#x27;biankuang.png&#x27; //大边框</span><br><span class="line">	let that = this</span><br><span class="line">	await this.getImge(backImg).then(res =&gt; &#123;</span><br><span class="line">		this.ctx.drawImage(res.path, 15 * that.rpx, 15 * that.rpx, 345 * that.rpx, 571 * that.rpx)</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="弊端缺点"><a href="#弊端缺点" class="headerlink" title="弊端缺点"></a>弊端缺点</h2><p>如果是需要绘制多张图片，导致需要多次调用drawImage方法，再加上需要判断文字换行等操作的话，可能会造成内容绘制时间过长。</p>
<p>canvas用在小程序上问题很多，优化起来真的很不易（除非咱要的某些功能处理不得不使用这种方法，一般真的推荐使用），canvas官方提供的优化方法之一：** 离屏 **。</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>感谢阅读。</p>
<p>么么哒~~</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>笔记</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>JScript</tag>
        <tag>vue</tag>
        <tag>微信小程序</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：实现数组排列组合图片合成，做一个NFT生成器！</title>
    <url>/2022/02/14/android-nft/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>NFT是前两年火起来的，被大家称为是去中心化的非同质化代币，是具有唯一性的数字资产加密货币令牌，并且是可以买卖的！</p>
<p>这是一场资本家的狂欢泡沫还是致富风口？</p>
<p>咱不知道，就是单纯的最近想自己玩一玩，弄一套上架到NFT交易平台上去看看2333..</p>
<p>然后自己p好了素材，苦于找不到批量生成工具，找了一圈发现网络上有很多js和python的脚本。</p>
<p>但是我自己下载下来运行后发现，不是缺这个模块就是缺那个环境没有部署，更难受的是安装模块还不成功！</p>
<p>最后就自己在Android上去实现了</p>
<p>下面直接看怎么实现的：</p>
<h1 id="Android实现图片合成"><a href="#Android实现图片合成" class="headerlink" title="Android实现图片合成"></a>Android实现图片合成</h1><span id="more"></span>

<h2 id="数组排列组合"><a href="#数组排列组合" class="headerlink" title="数组排列组合"></a>数组排列组合</h2><p>先把每个素材保存到单独的数组里，然后把全部数组合并为一个数组：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">allList.add(arr_1);</span><br><span class="line">allList.add(arr_2);</span><br><span class="line">allList.add(arr_3);</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>排列组合：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 算法，非递归计算所有组合</span><br><span class="line"> * @param inputList 所有数组的列表</span><br><span class="line"> * allList_new：排列组合后的新数组</span><br><span class="line"> * </span><br><span class="line"> * */</span><br><span class="line">public void def_calculateCombination(List&lt;List&lt;String&gt;&gt; inputList) &#123;</span><br><span class="line">    List&lt;Integer&gt; combination = new ArrayList&lt;Integer&gt;();</span><br><span class="line">    allList_new.clear();</span><br><span class="line">    int n=inputList.size();</span><br><span class="line">    for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">        combination.add(0);</span><br><span class="line">    &#125;</span><br><span class="line">    int i=0;</span><br><span class="line">    boolean isContinue=false;</span><br><span class="line">    do&#123;</span><br><span class="line">        List&lt;String&gt; List = new ArrayList&lt;&gt;();</span><br><span class="line">        //打印一次循环生成的组合</span><br><span class="line">        for (int j = 0; j &lt; n; j++) &#123;</span><br><span class="line">            Log.e(&quot;=========&gt;&gt;&gt;&quot;, &quot;&quot; + inputList.get(j).get(combination.get(j)));</span><br><span class="line">            List.add(&quot;&quot; + inputList.get(j).get(combination.get(j)));</span><br><span class="line">        &#125;</span><br><span class="line">        Log.e(&quot;=========&quot;, &quot;====下一组====&quot;);</span><br><span class="line">        allList_new.add(List);</span><br><span class="line"></span><br><span class="line">        i++;</span><br><span class="line">        combination.set(n - 1, i);</span><br><span class="line">        for (int j = n - 1; j &gt;= 0; j--) &#123;</span><br><span class="line">            if (combination.get(j) &gt;= inputList.get(j).size()) &#123;</span><br><span class="line">                combination.set(j, 0);</span><br><span class="line">                i = 0;</span><br><span class="line">                if (j - 1 &gt;= 0) &#123;</span><br><span class="line">                    combination.set(j - 1, combination.get(j - 1) + 1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        isContinue = false;</span><br><span class="line">        for (Integer integer : combination) &#123;</span><br><span class="line">            if (integer != 0) &#123;</span><br><span class="line">                isContinue = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;while (isContinue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="图片合成"><a href="#图片合成" class="headerlink" title="图片合成"></a>图片合成</h2><p>图片合成，返回合成后的新图片Bitmap：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line">    * </span><br><span class="line">    * @param background 背景图</span><br><span class="line">    * @param body 前景图</span><br><span class="line">    * @return</span><br><span class="line">    */</span><br><span class="line">   public Bitmap def_combineBitmap(Bitmap background, Bitmap body) &#123;</span><br><span class="line">       if (background == null) &#123;</span><br><span class="line">           return null;</span><br><span class="line">       &#125;</span><br><span class="line">       int bgWidth = background.getWidth();</span><br><span class="line">       int bgHeight = background.getHeight();</span><br><span class="line">       /*</span><br><span class="line">        int fgWidth = body.getWidth();</span><br><span class="line">        int fgHeight = body.getHeight();</span><br><span class="line">        */</span><br><span class="line">       Bitmap newmap = Bitmap.createBitmap(bgWidth, bgHeight, Bitmap.Config.ARGB_8888);</span><br><span class="line">       Canvas canvas = new Canvas(newmap);</span><br><span class="line">	//添加每个素材图片到画布</span><br><span class="line">       if (background != null) &#123;</span><br><span class="line">           canvas.drawBitmap(background, 0, 0, null);//参数2和3是设置贴图的xy坐标位置</span><br><span class="line">       &#125;</span><br><span class="line">       if (body != null) &#123;</span><br><span class="line">           canvas.drawBitmap(body, 0, 0, null);</span><br><span class="line">       &#125;</span><br><span class="line">	//更多素材可以继续在后面添加</span><br><span class="line">       canvas.save();</span><br><span class="line">       canvas.restore();</span><br><span class="line">       return newmap;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="保存图片到手机"><a href="#保存图片到手机" class="headerlink" title="保存图片到手机"></a>保存图片到手机</h2><p>保存图片到sd卡指定目录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">public void def_savePic(Bitmap btImage) &#123;</span><br><span class="line">       if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) &#123;    </span><br><span class="line">           FileOutputStream out = null;</span><br><span class="line">           // 获取SDCard指定目录下</span><br><span class="line">           String sdCardDir = Environment.getExternalStorageDirectory() + &quot;/NFT/&quot;;</span><br><span class="line">           File dirFile  = new File(sdCardDir);  //目录转化成文件夹</span><br><span class="line">           if (!dirFile .exists()) &#123;  //如果不存在，那就建立这个文件夹</span><br><span class="line">               dirFile .mkdirs();</span><br><span class="line">           &#125;  </span><br><span class="line">           File file = new File(sdCardDir, &quot;NFT&quot; + System.currentTimeMillis() + &quot;.png&quot;);// 在SDcard的目录下创建图片文，以当前时间为其命名</span><br><span class="line">           try &#123;</span><br><span class="line">               out = new FileOutputStream(file);</span><br><span class="line">               btImage.compress(Bitmap.CompressFormat.PNG, 100, out);</span><br><span class="line">               //System.out.println(&quot;___保存到_sd_指定目录文件夹___&quot;);</span><br><span class="line">           &#125; catch (FileNotFoundException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">           try &#123;</span><br><span class="line">               out.flush();</span><br><span class="line">               out.close();</span><br><span class="line">           &#125; catch (IOException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">           //Toast.makeText(MainActivity.this, &quot;保存已经至&quot; + sdCardDir + &quot;目录文件夹下&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>保存图片需要SD卡写入的权限，别忘了在 <code>AndroidManifest.xml</code> 中添加！</p>
<h2 id="附加：系统文件管理器选择文件素材并返回路径Uri"><a href="#附加：系统文件管理器选择文件素材并返回路径Uri" class="headerlink" title="附加：系统文件管理器选择文件素材并返回路径Uri"></a>附加：系统文件管理器选择文件素材并返回路径Uri</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">//存放需要过滤的类型的类</span><br><span class="line">public class MimeType &#123;</span><br><span class="line">    /*</span><br><span class="line">     public static final String DOC = &quot;application/msword&quot;;</span><br><span class="line">     public static final String DOCX = &quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot;;</span><br><span class="line">     public static final String XLS = &quot;application/vnd.ms-excel&quot;;</span><br><span class="line">     public static final String XLSX = &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;;</span><br><span class="line">     public static final String PPT = &quot;application/vnd.ms-powerpoint&quot;;</span><br><span class="line">     public static final String PPTX = &quot;application/vnd.openxmlformats-officedocument.presentationml.presentation&quot;;</span><br><span class="line">     public static final String PDF = &quot;application/pdf&quot;;</span><br><span class="line">     public static final String PNG = &quot;image/png&quot;;</span><br><span class="line">     */</span><br><span class="line">    public static final String JPG = &quot;image/*&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//选择文件</span><br><span class="line">private void def_performFileSearch() &#123;</span><br><span class="line">    Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);</span><br><span class="line">    intent.addCategory(Intent.CATEGORY_OPENABLE);</span><br><span class="line">    //允许多选 长按多选</span><br><span class="line">    intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);</span><br><span class="line">    //不限制选取类型</span><br><span class="line">    intent.setType(&quot;*/*&quot;);</span><br><span class="line"></span><br><span class="line">    //如果想给选择器添加过滤的文件类型，只需要添加如下代码就可以了</span><br><span class="line">    String[] mimeTypes = &#123;</span><br><span class="line">        /*</span><br><span class="line">         MimeType.DOC, </span><br><span class="line">         MimeType.DOCX, </span><br><span class="line">         MimeType.PDF, </span><br><span class="line">         MimeType.PPT, </span><br><span class="line">         MimeType.PPTX, </span><br><span class="line">         MimeType.XLS, </span><br><span class="line">         MimeType.XLSX,</span><br><span class="line">         MimeType.PNG,*/</span><br><span class="line">         MimeType.JPG</span><br><span class="line">    &#125;;</span><br><span class="line">    intent.putExtra(Intent.EXTRA_MIME_TYPES, mimeTypes);</span><br><span class="line"></span><br><span class="line">    startActivityForResult(intent, 1); //第二个参数必须是大于0的，才会响应onActivityResult()回调函数</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//接收选择文件后的返回值</span><br><span class="line">@Override</span><br><span class="line">protected void onActivityResult(int requestCode, int resultCode, Intent data) &#123;</span><br><span class="line">    super.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    switch (requestCode) &#123;</span><br><span class="line">        case 1:</span><br><span class="line">            if (resultCode == Activity.RESULT_OK &amp;&amp; data != null) &#123;</span><br><span class="line">                //单选选了一个文件后返回</span><br><span class="line">                if (data.getData() != null) &#123;</span><br><span class="line">                    String uri = def_handleSingleDocument(data);</span><br><span class="line">                    //数据uri</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    //多选后返回</span><br><span class="line">                    ClipData clipData = data.getClipData();</span><br><span class="line">                    if (clipData != null) &#123;</span><br><span class="line">                        Uri[] uris = new Uri[clipData.getItemCount()];</span><br><span class="line">                        for (int i = 0; i &lt; clipData.getItemCount(); i++) &#123;</span><br><span class="line">                            uris[i] = clipData.getItemAt(i).getUri();</span><br><span class="line">                        &#125;</span><br><span class="line">			//数据uris</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//将uri转换为我们需要的path,多选类似</span><br><span class="line">private String def_handleSingleDocument(Intent data) &#123;</span><br><span class="line">    Uri uri = data.getData();</span><br><span class="line">    String filePath = null;</span><br><span class="line">    try &#123;</span><br><span class="line">        filePath = MyFileUtils.getPath(this, uri);</span><br><span class="line">    &#125; catch (Exception e) &#123;&#125;</span><br><span class="line">    return filePath;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>基本上，通关上面这些关键函数，就完全可以实现自己做一个“NFT生成器”App了。</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>（PS：NFT还会跟当年的比特币那样火起来吗，还是泡沫破灭呢，值得深思emmm…）</p>
<p>OK，今天就这样，感谢阅读。</p>
<p>么么哒~~</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>吐槽</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>图片合成</tag>
        <tag>排列组合</tag>
        <tag>NFT</tag>
      </tags>
  </entry>
  <entry>
    <title>Android实现帧动画动态设置播放时间间隔</title>
    <url>/2021/06/07/android-gif/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前些天在弄一个娱乐小工具App，需要播放gif，但是找了一圈，基本上是使用第三方库的<code>com.felipecsl:gifimageview:2.2.0</code>，和Android帧动画的。</p>
<p>第三方库貌似自定义局限性很大，帧动画的话在xml中把播放时间给写死了，也不好控制。</p>
<p>自带的api只看到getDuration，但是没有setDuration，就离谱。</p>
<p>找了一圈发现是有方法自己去实现setDuration的。</p>
<p>下面直接看怎么实现的：</p>
<h1 id="帧动画实现控制播放时间-速度"><a href="#帧动画实现控制播放时间-速度" class="headerlink" title="帧动画实现控制播放时间/速度"></a>帧动画实现控制播放时间/速度</h1><span id="more"></span>

<h2 id="帧动画的实现"><a href="#帧动画的实现" class="headerlink" title="帧动画的实现"></a>帧动画的实现</h2><p>首先，把帧动画的每一帧图片放到项目的drawable文件夹里。</p>
<p>然后在代码中写成数组待用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">int[] filesNames = &#123;</span><br><span class="line">	R.drawable.sb0,</span><br><span class="line">       R.drawable.sb1,</span><br><span class="line">       R.drawable.sb2,</span><br><span class="line">       ...</span><br><span class="line">       ...</span><br><span class="line">       R.drawable.sb42,</span><br><span class="line">       R.drawable.sb43</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>利用循环，把每一帧添加到动画中：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">MyAnimationDrawable _animaition = new MyAnimationDrawable();</span><br><span class="line">   Drawable frame;</span><br><span class="line">   Bitmap bmp;</span><br><span class="line">int n = filesNames.length;</span><br><span class="line">       for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">           bmp = BitmapFactory.decodeResource(getResources(), filesNames[i]);</span><br><span class="line">           frame = new BitmapDrawable(getResources(), bmp);</span><br><span class="line">           _animaition.addFrame(frame, 100);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后把动画数组到控件里去：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">iv.setBackground(_animaition);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>以上就把帧动画实现了，下面开始实现帧动画时间/速度的自定义控制。</p>
<h2 id="帧动画时间-速度控制"><a href="#帧动画时间-速度控制" class="headerlink" title="帧动画时间/速度控制"></a>帧动画时间/速度控制</h2><p>控制帧动画的时间，函数重写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">//控制帧动画的时间，函数重写</span><br><span class="line">public class MyAnimationDrawable extends AnimationDrawable &#123;</span><br><span class="line"></span><br><span class="line">    private volatile int duration;//its volatile because another thread will update its value</span><br><span class="line">    private int currentFrame;</span><br><span class="line"></span><br><span class="line">    public MyAnimationDrawable() &#123;</span><br><span class="line">        currentFrame = 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void run() &#123;</span><br><span class="line">        int n = getNumberOfFrames();</span><br><span class="line">        currentFrame++;</span><br><span class="line">        if (currentFrame &gt;= n) &#123;</span><br><span class="line">            currentFrame = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        selectDrawable(currentFrame);</span><br><span class="line">        scheduleSelf(this, SystemClock.uptimeMillis() + duration);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setDuration(int duration) &#123;</span><br><span class="line">        this.duration = duration;</span><br><span class="line">        //we have to do the following or the next frame will be displayed after the old duration</span><br><span class="line">        unscheduleSelf(this);</span><br><span class="line">        selectDrawable(currentFrame);</span><br><span class="line">        scheduleSelf(this, SystemClock.uptimeMillis()+duration);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后就可以调用上面实现的函数了：<code>_animaition.setDuration(speed);</code></p>
<p>speed为自定义时间/速度参数。</p>
<p>最后启动动画：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">//是否仅仅启动一次？</span><br><span class="line">   _animaition.setOneShot(false);</span><br><span class="line">   if (_animaition.isRunning()) &#123; //是否正在运行？</span><br><span class="line">       _animaition.stop(); //停止</span><br><span class="line">   &#125;</span><br><span class="line">   _animaition.start();//启动</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>以上就完成了实现Android的帧动画时间控制和速度自定义控制的部署。</p>
<h1 id="附加：音频播放速度控制和播放完毕监控"><a href="#附加：音频播放速度控制和播放完毕监控" class="headerlink" title="附加：音频播放速度控制和播放完毕监控"></a>附加：音频播放速度控制和播放完毕监控</h1><h2 id="音频播放速度控制"><a href="#音频播放速度控制" class="headerlink" title="音频播放速度控制"></a>音频播放速度控制</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">//设置播放速度</span><br><span class="line">   private boolean setPlaySpeed(MediaPlayer mediaPlayer, float speed) &#123;</span><br><span class="line">       if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) &#123;</span><br><span class="line">           try &#123;</span><br><span class="line">               PlaybackParams params = mediaPlayer.getPlaybackParams();</span><br><span class="line">               params.setSpeed(speed);</span><br><span class="line">               mediaPlayer.setPlaybackParams(params);</span><br><span class="line">               return true;</span><br><span class="line">           &#125; catch (Exception e) &#123;</span><br><span class="line">               String TAG = &quot;设置播放速度 -------- &gt;&gt;&gt;&quot;;</span><br><span class="line">               Log.e(TAG, &quot;setPlaySpeed: &quot;, e);</span><br><span class="line">               return false;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       return false;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="音频播放完毕监控"><a href="#音频播放完毕监控" class="headerlink" title="音频播放完毕监控"></a>音频播放完毕监控</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Sound_doing.setOnCompletionListener(new MediaPlayer.OnCompletionListener() &#123;</span><br><span class="line">       @Override</span><br><span class="line">       public void onCompletion(MediaPlayer mp) &#123;</span><br><span class="line">           // 在播放完毕被回调</span><br><span class="line">		// Do something...</span><br><span class="line">       &#125;;</span><br><span class="line">   &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Sound_doing为创建的mediaplayer对象</p>
<p>如：<code>MediaPlayer.create(MainActivity.this, R.raw.sound_success);</code></p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>（PS：手机上用AIDE码Android，操作起来真的好费眼，还是电脑使用Android Studio方便啊。只不过AIDE方便，随时随地可以码，emmm…）</p>
<p>OK，今天就这样，感谢阅读。</p>
<p>么么哒~~</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>吐槽</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Duration</tag>
        <tag>帧动画</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo添加完GitTalk评论系统后报错以及解决办法</title>
    <url>/2020/12/23/GitTalk-Error/</url>
    <content><![CDATA[<p>这几天在折腾hexo，通过github搭了这么一个博客，然后就去申请使用了gittalk的评论。</p>
<p>第一次折腾这玩意儿，完全不知道报这些错误是为什么，一开始博客的页面一直报Error:Not found，如下：</p>
<span id="more"></span>

<p><img src="https://img-blog.csdnimg.cn/20190216224052792.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcnQxbm4=,size_16,color_FFFFFF,t_70" alt=""></p>
<p>在搜索引擎的帮助下，发现是gittalk中的信息填写错了，</p>
<pre><code>name随便写；

Homepage URL是你的仓库的名字，

Authorization callback URL如果你指向了新的域名就填新的，比如说我指向了域名 hexo.hzv5.cn；否则也写仓库的名字就可以。</code></pre><p>这样之后这个错误解决了。</p>
<p>另外，有的时候有些朋友也会有这样的一种情况，就是没有报错，但是点击登录Github按钮会自动重定向跳转到首页，这种情况也是上面的一些设置没有设置好导致的，按照上面说的重新设置一下就行。</p>
<p>注意：如果github博客开启了force https功能，需要将OAuth Apps中的地址改为https。</p>
<p>但是，登录打开评论一看，又报了新的错误：</p>
<pre><code>Error:Issues are disabled for this repo</code></pre><p><img src="https://img-blog.csdnimg.cn/20190216224510351.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcnQxbm4=,size_16,color_FFFFFF,t_70" alt=""></p>
<p>这个错误你只需要去项目的设置里，设置一下就行了，Settings-Features-把Issures打勾</p>
<p><img src="https://img-blog.csdnimg.cn/20190216224451356.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01hcnQxbm4=,size_16,color_FFFFFF,t_70" alt=""></p>
<p>这样一顿倒腾之后，博主的gittalk已经能正常使用了。</p>
<p>欢迎登录Github评论留言…</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>GitTalk</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo依靠yilia主题实现添加相册目录</title>
    <url>/2020/12/22/yilia-photos/</url>
    <content><![CDATA[<p>这是<a href="http://litten.me/">Litten</a>相册的修改版，版权归原作者所有</p>
<h4 id="点此预览效果"><a href="#点此预览效果" class="headerlink" title="点此预览效果"></a><a href="https://hexo.hzv5.cn/photos/">点此预览效果</a></h4><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="本相册适用于hexo-yilia主题，移植到其他主题需要改动"><a href="#本相册适用于hexo-yilia主题，移植到其他主题需要改动" class="headerlink" title="本相册适用于hexo-yilia主题，移植到其他主题需要改动"></a>本相册适用于hexo-yilia主题，移植到其他主题需要改动</h2><h3 id="与原作者相比改动"><a href="#与原作者相比改动" class="headerlink" title="与原作者相比改动"></a>与原作者相比改动</h3><span id="more"></span>
<p>1.由原作者图片托管在instagram改为托管在本地</p>
<p>2.由原作者图片尺寸固定改为尺寸可以写入ins.json</p>
<p>3.去掉原作者type选项，只可以放图片而不能放视频，并且图片格式只支持jpg（如果需要支持更多格式对ins.js稍作修改即可）</p>
<p>4.link作为图片名</p>
<p>5.去掉ins.jsn中的src选项</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>1.将本项目所有文件保存到您hexo的source目录下的一个目录里</p>
<p>2.在本目录新建ins与minins文件夹，将原图片保存到ins文件夹下，图片略缩图保存在minins文件夹下，略缩图推荐尺寸:328x328</p>
<p>3.之后source目录树一般如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">├── _posts</span><br><span class="line">├── photos</span><br><span class="line">|   ├── ins</span><br><span class="line">|   |   ├──pic1.jpg</span><br><span class="line">|   |   ├──pic2.jpg</span><br><span class="line">|   |   └──pic3.jpg</span><br><span class="line">|   ├── minins</span><br><span class="line">|   |   ├──pic1.min.jpg</span><br><span class="line">|   |   ├──pic2.min.jpg</span><br><span class="line">|   |   └──pic3.min.jpg</span><br><span class="line">|   ├── index.ejs</span><br><span class="line">|   ├── ins.css</span><br><span class="line">|   ├── ins.js</span><br><span class="line">|   └── ins.json</span><br><span class="line">└── CNAME</span><br></pre></td></tr></table></figure>

<p>4.如果原图名称为xxxx.jpg，则略缩图名称为xxxx.min.jpg</p>
<p>5.修改ins.json与您实际情况相匹配，其中图片名不需要写后缀，描述部分随意，图片尺寸格式为图片宽度x图片高度，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	&quot;date&quot;: &quot;2015-05&quot;,</span><br><span class="line">	&quot;arr&quot;: &#123;</span><br><span class="line">		&quot;year&quot;: 2015,</span><br><span class="line">		&quot;month&quot;: 5,</span><br><span class="line">		&quot;link&quot;: [&quot;201505251818&quot;],</span><br><span class="line">		&quot;text&quot;: [&quot;这是一张在2015年五月拍摄的照片&quot;],</span><br><span class="line">		&quot;sizes&quot;: [&quot;1000x1000&quot;]</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>照片太多可以自己写程序简化操作</p>
<p>略缩图可下载这个软件批量生成</p>
<p>链接: <a href="https://pan.baidu.com/s/1slULnUd">https://pan.baidu.com/s/1slULnUd</a> 密码: 54je</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>yilia</tag>
        <tag>相册</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hexo+github搭建免费个人博客详细教程</title>
    <url>/2020/12/22/hexo-github/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p>
<ol>
<li>全是静态文件，访问速度快；</li>
<li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li>
<li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li>
<li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li>
<li>博客内容可以轻松打包、转移、发布到其它平台；</li>
<li>等等；<span id="more"></span>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2></li>
</ol>
<p>在开始一切之前，你必须已经：</p>
<ul>
<li>有一个github账号，没有的话去注册一个；</li>
<li>安装了node.js、npm，并了解相关基础知识；</li>
<li>安装了git for windows（或者其它git客户端）</li>
</ul>
<p>本文所使用的环境：</p>
<ul>
<li>Windows8.1</li>
<li><a href="mailto:node.js@5.5.0">node.js@5.5.0</a></li>
<li><a href="mailto:git@1.9.2">git@1.9.2</a></li>
<li><a href="mailto:hexo@3.2.2">hexo@3.2.2</a></li>
</ul>
<h1 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>新建一个名为<code>你的用户名.github.io</code>的仓库，比如说，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io">http://test.github.io</a> 了，是不是很方便？</p>
<p>由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p>
<p>几个注意的地方：</p>
<ol>
<li>注册的邮箱一定要验证，否则不会成功；</li>
<li>仓库名字必须是：<code>username.github.io</code>，其中<code>username</code>是你的用户名；</li>
<li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</li>
</ol>
<p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>当然，你不绑定域名肯定也是可以的，就用默认的 <code>xxx.github.io</code> 来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是OK的。</p>
<p>首先你要注册一个域名，域名注册以前总是推荐去<code>godaddy</code>，现在觉得其实国内的阿里云也挺不错的，价格也不贵，毕竟是大公司，放心！</p>
<p>绑定域名分2种情况：带www和不带www的。</p>
<p>域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下<code>你的用户名.github.io</code>的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向<code>你的用户名.github.io</code>，这样可以保证无论是否添加www都可以访问，如下：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_191336_238_8683.png" alt=""></p>
<p>然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好，因为经测试：</p>
<ul>
<li>如果你填写的是没有www的，比如 mygit.me，那么无论是访问 <a href="http://www.mygit.me">http://www.mygit.me</a> 还是 <a href="http://mygit.me">http://mygit.me</a> ，都会自动跳转到 <a href="http://mygit.me">http://mygit.me</a></li>
<li>如果你填写的是带www的，比如 <a href="http://www.mygit.me">www.mygit.me</a> ，那么无论是访问 <a href="http://www.mygit.me">http://www.mygit.me</a> 还是 <a href="http://mygit.me">http://mygit.me</a> ，都会自动跳转到 <a href="http://www.mygit.me">http://www.mygit.me</a></li>
<li>如果你填写的是其它子域名，比如 abc.mygit.me，那么访问 <a href="http://abc.mygit.me">http://abc.mygit.me</a> 没问题，但是访问 <a href="http://mygit.me">http://mygit.me</a> ，不会自动跳转到 <a href="http://abc.mygit.me">http://abc.mygit.me</a></li>
</ul>
<p>另外说一句，在你绑定了新域名之后，原来的<code>你的用户名.github.io</code>并没有失效，而是会自动跳转到你的新域名。</p>
<h1 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h1><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p>
<pre><code>$ cd ~/. ssh #检查本机已存在的ssh密钥</code></pre><p>如果提示：No such file or directory 说明你是第一次使用git。</p>
<pre><code>ssh-keygen -t rsa -C &apos;邮件地址&apos;</code></pre><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_143914_495_9084.png" alt=""></p>
<p>将刚复制的内容粘贴到key那里，title随便填，保存。</p>
<h2 id="测试是否成功"><a href="#测试是否成功" class="headerlink" title="测试是否成功"></a>测试是否成功</h2><pre><code>$ ssh -T git@github.com # 注意邮箱地址不用改</code></pre><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p>
<blockquote>
<p>Hi liuxianan! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
</blockquote>
<p>看到这个信息说明SSH已配置成功！</p>
<p>此时你还需要配置：</p>
<pre><code>$ git config --global user.name &amp;quot;liuxianan&amp;quot;// 你的github用户名，非昵称
$ git config --global user.email  &amp;quot;xxx@qq.com&amp;quot;// 填写你的github注册邮箱</code></pre><p>具体这个配置是干嘛的我没仔细深究。</p>
<h1 id="使用hexo写博客"><a href="#使用hexo写博客" class="headerlink" title="使用hexo写博客"></a>使用hexo写博客</h1><h2 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h2><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p>
<p>官网： <a href="http://hexo.io">http://hexo.io</a></p>
<p>github: <a href="https://github.com/hexojs/hexo">https://github.com/hexojs/hexo</a></p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>安装之前先来说几个注意事项：</p>
<ol>
<li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</li>
<li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li>
<li>hexo有2种<code>_config.yml</code>文件，一个是根目录下的全局的<code>_config.yml</code>，一个是各个<code>theme</code>下的；</li>
</ol>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre><code>$ npm install -g hexo</code></pre><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是<code>F:\Workspaces\hexo</code>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p>
<pre><code>$ cd /f/Workspaces/hexo/
$ hexo init</code></pre><p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_115922_773_1148.png" alt=""></p>
<pre><code>$ hexo g # 生成
$ hexo s # 启动服务</code></pre><p>执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_120700_028_2426.png" alt=""></p>
<p><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考这篇文章：<a href="http://blog.liuxianan.com/windows-port-bind.html">http://blog.liuxianan.com/windows-port-bind.html</a></p>
<p>第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑，打开时就是这个样子：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_132443_202_6848.png" alt=""></p>
<h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><p>既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是 <a href="https://hexo.io/themes/">官方主题</a>。</p>
<p>个人比较喜欢的2个主题：<a href="https://github.com/pinggod/hexo-theme-jekyll">hexo-theme-jekyll</a> 和 <a href="https://github.com/litten/hexo-theme-yilia">hexo-theme-yilia</a>。</p>
<p>首先下载这个主题：</p>
<pre><code>$ cd /f/Workspaces/hexo/
$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></pre><p>下载后的主题都在这里：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_134500_245_0912.png" alt=""></p>
<p>修改<code>_config.yml</code>中的<code>theme: landscape</code>改为<code>theme: yilia</code>，然后重新执行<code>hexo g</code>来重新生成。</p>
<p>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下public的内容，然后再来重新生成和发布。</p>
<h2 id="上传之前"><a href="#上传之前" class="headerlink" title="上传之前"></a>上传之前</h2><p>在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p>
<h2 id="上传到github"><a href="#上传到github" class="headerlink" title="上传到github"></a>上传到github</h2><p>如果你一切都配置好了，发布上传很容易，一句<code>hexo d</code>就搞定，当然关键还是你要把所有东西配置好。</p>
<p>首先，<code>ssh key</code>肯定要配置好。</p>
<p>其次，配置<code>_config.yml</code>中有关deploy的部分：</p>
<p>正确写法：</p>
<pre><code>deploy:
  type: git
  repository: git@github.com:liuxianan/liuxianan.github.io.git
  branch: master</code></pre><p>错误写法：</p>
<pre><code>deploy:
  type: github
  repository: https://github.com/liuxianan/liuxianan.github.io.git
  branch: master</code></pre><p>后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行<code>hexo d</code>的话一般会报如下错误：</p>
<pre><code>&lt;Deployer not found: github 或者 Deployer not found: git</code></pre><p>原因是还需要安装一个插件：</p>
<pre><code>npm install hexo-deployer-git --save</code></pre><p>其它命令不确定，部署这个命令一定要用git bash，否则会提示<code>Permission denied (publickey).</code></p>
<p>打开你的git bash，输入<code>hexo d</code>就会将本次有改动的代码全部提交，没有改动的不会：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_140441_769_5024.png" alt=""></p>
<h2 id="保留CNAME、README-md等文件"><a href="#保留CNAME、README-md等文件" class="headerlink" title="保留CNAME、README.md等文件"></a>保留CNAME、README.md等文件</h2><p>提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_141037_580_8035.png" alt=""></p>
<p>由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。</p>
<h2 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h2><p>常见命令</p>
<pre><code>hexo new &amp;quot;postName&amp;quot; #新建文章
hexo new page &amp;quot;pageName&amp;quot; #新建页面
hexo generate #生成静态页面至public目录
hexo server #开启预览访问端口（默认端口4000，&amp;#39;ctrl + c&amp;#39;关闭server）
hexo deploy #部署到GitHub
hexo help  # 查看帮助
hexo version  #查看Hexo的版本</code></pre><p>缩写：</p>
<pre><code>hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy</code></pre><p>组合命令：</p>
<pre><code>hexo s -g #生成并本地预览
hexo d -g #生成并上传</code></pre><h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。</p>
<p>需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p>
<h2 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h2><p>定位到我们的hexo根目录，执行命令：</p>
<pre><code>hexo new &amp;#39;my-first-blog&amp;#39;</code></pre><p>hexo会帮我们在<code>_posts</code>下生成相关md文件：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_183047_352_1475.png" alt=""></p>
<p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_183325_470_9306.png" alt=""></p>
<p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p>
<p>一般完整格式如下：</p>
<pre><code>---
title: postName #文章页面上的显示名称，一般是中文
date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改
categories: 默认分类 #分类
tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格
description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面
---</code></pre><p>以下是正文</p>
<p>那么<code>hexo new page &#39;postName&#39;</code>命令和<code>hexo new &#39;postName&#39;</code>有什么区别呢？</p>
<pre><code>hexo new page &apos;my-second-blog&apos;</code></pre><p>生成如下：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_184852_854_6502.png" alt=""></p>
<p>最终部署时生成：<code>hexo\public\my-second-blog\index.html</code>，但是它不会作为文章出现在博文目录。</p>
<h3 id="写博客工具"><a href="#写博客工具" class="headerlink" title="写博客工具"></a>写博客工具</h3><p>那么用什么工具写博客呢？这个我还没去找，以前自己使用editor.md简单弄了个，大家有好用的hexo写博客工具可以推荐个。</p>
<h3 id="如何让博文列表不显示全部内容"><a href="#如何让博文列表不显示全部内容" class="headerlink" title="如何让博文列表不显示全部内容"></a>如何让博文列表不显示全部内容</h3><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p>
<p>答案是在合适的位置加上<code>&amp;lt;!--more--&amp;gt;</code>即可，例如：</p>
<h1 id="前言-1"><a href="#前言-1" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p>
<ol>
<li>全是静态文件，访问速度快；</li>
<li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li>
<li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li>
<li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li>
<li>博客内容可以轻松打包、转移、发布到其它平台；</li>
<li>等等；</li>
</ol>
<p>最终效果：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_184633_653_1893.png" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://www.cnblogs.com/zhcncn/p/4097881.html">http://www.cnblogs.com/zhcncn/p/4097881.html</a></p>
<p><a href="http://www.jianshu.com/p/05289a4bc8b2">http://www.jianshu.com/p/05289a4bc8b2</a></p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>GitTalk</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/12/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
<h1 id="博客转移成功"><a href="#博客转移成功" class="headerlink" title="博客转移成功"></a>博客转移成功</h1><p>今天把博客从emlog转移到了hexo，这个hexo自带的博文就不删除了，留着作为一个时间线吧。</p>
]]></content>
      <categories>
        <category>第一次</category>
      </categories>
      <tags>
        <tag>你好世界</tag>
        <tag>第一次</tag>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Git相关工具(MarkdownPad等等)避免踩坑的一些补充笔记</title>
    <url>/2020/12/14/About-Git-Err-2/</url>
    <content><![CDATA[<h1 id="啰里啰嗦"><a href="#啰里啰嗦" class="headerlink" title="啰里啰嗦"></a>啰里啰嗦</h1><p>好像好久没有更新博客了，今年疫情很多人都过的不是很好，又到年底了，提前祝大家新年快乐吧😂，希望各位读者能够在新的一年蒸蒸日上，早日摆脱不开心，心想事成。😁哈哈~</p>
<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="1丶hexo命令操作时出现的问题"><a href="#1丶hexo命令操作时出现的问题" class="headerlink" title="1丶hexo命令操作时出现的问题"></a>1丶hexo命令操作时出现的问题</h2><h3 id="hexo-v出现的问题"><a href="#hexo-v出现的问题" class="headerlink" title="hexo -v出现的问题"></a>hexo -v出现的问题</h3><span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">(node:9876) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class="line">(node:9876) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class="line">(node:9876) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br><span class="line">(node:9876) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class="line">(node:9876) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class="line">(node:9876) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.18363 win32 x64</span><br><span class="line">node: 14.0.0</span><br><span class="line">v8: 8.1.307.30-node.30</span><br><span class="line">uv: 1.37.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.16.0</span><br><span class="line">modules: 83</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 6</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">openssl: 1.1.1f</span><br><span class="line">cldr: 36.1</span><br><span class="line">icu: 66.1</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 13.0</span><br></pre></td></tr></table></figure>

<h3 id="hexo-d-和-hexo-g-出现的问题"><a href="#hexo-d-和-hexo-g-出现的问题" class="headerlink" title="hexo d 和 hexo g 出现的问题"></a>hexo d 和 hexo g 出现的问题</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo d -g</span><br><span class="line">(node:3908) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class="line">(node:3908) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class="line">(node:3908) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br><span class="line">(node:3908) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class="line">(node:3908) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class="line">(node:3908) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 94 ms</span><br><span class="line">INFO  0 files generated in 22 ms</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">FATAL Something&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line">TypeError [ERR_INVALID_ARG_TYPE]: The &quot;mode&quot; argument must be integer. Received an instance of Object</span><br><span class="line">    at copyFile (fs.js:1890:10)</span><br><span class="line">    at tryCatcher (D:\Blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at ret (eval at makeNodePromisifiedEval (D:\Node\node_global\node_modules\hexo-cli\node_modules\bluebird\js\release\promisify.js:184:12), &lt;anonymous&gt;:13:39)</span><br><span class="line">    at D:\Blog\node_modules\hexo-fs\lib\fs.js:144:39</span><br><span class="line">    at tryCatcher (D:\Blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (D:\Blog\node_modules\bluebird\js\release\promise.js:547:31)</span><br><span class="line">    at Promise._settlePromise (D:\Blog\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (D:\Blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (D:\Blog\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">    at Promise._fulfill (D:\Blog\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">    at Promise._resolveCallback (D:\Blog\node_modules\bluebird\js\release\promise.js:466:57)</span><br><span class="line">    at Promise._settlePromiseFromHandler (D:\Blog\node_modules\bluebird\js\release\promise.js:559:17)</span><br><span class="line">    at Promise._settlePromise (D:\Blog\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (D:\Blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (D:\Blog\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">    at Promise._fulfill (D:\Blog\node_modules\bluebird\js\release\promise.js:673:18)</span><br><span class="line">    at Promise._resolveCallback (D:\Blog\node_modules\bluebird\js\release\promise.js:466:57)</span><br><span class="line">    at Promise._settlePromiseFromHandler (D:\Blog\node_modules\bluebird\js\release\promise.js:559:17)</span><br><span class="line">    at Promise._settlePromise (D:\Blog\node_modules\bluebird\js\release\promise.js:604:18)</span><br><span class="line">    at Promise._settlePromise0 (D:\Blog\node_modules\bluebird\js\release\promise.js:649:10)</span><br><span class="line">    at Promise._settlePromises (D:\Blog\node_modules\bluebird\js\release\promise.js:729:18)</span><br><span class="line">    at Promise._fulfill (D:\Blog\node_modules\bluebird\js\release\promise.js:673:18)</span><br></pre></td></tr></table></figure>


<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>出现以上的这些问题，博主大胆猜测是因为node版本太高导致的，切换成低版本的node来安装和编译Hexo就可以了。</p>
<p>为什么是猜测呢，因为博主原先是安装了最新版node14.15.1.0，然后卸载重新安装了一个之前存在U盘里的node12.5.0.0版本，这个问题就解决了。😂知道具体原因的朋友也可以在现房评论区告诉博主，么么哒~</p>
<h2 id="2丶MarkdownPad发生HTML渲染组件出错的"><a href="#2丶MarkdownPad发生HTML渲染组件出错的" class="headerlink" title="2丶MarkdownPad发生HTML渲染组件出错的"></a>2丶MarkdownPad发生HTML渲染组件出错的</h2><p>此前是WIN7得到电脑，写这篇博文的时候博主换成了WIN10系统的电脑，然后MarkdowPad就发生了错误，提示如图:</p>
<p><img src="/img/GitalkErr2/MarkdowPad.png" alt="MarkdowPad错误"></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>出现问题当然第一时间是请教万能的网友了，于是博主就百度了一下相关的关键词， 果然发现有网友也出现过这个问题，于是博主不要脸的作为本博文的一节借鉴（抄？）了过来，也算是给自己做了一个小小的笔记吧。🤣</p>
<p>反正就是win8跟win10都会发生，上面也刚刚说了，博主此前是用的WIN7刚换的WIN10系统嘛。</p>
<p>具体办法：</p>
<p>下载这个东西： Awesomium 1.6.6 SDK</p>
<p>下载完一路点安装就行。</p>
<p>遇到有2个点不了next的时候，是有一个需要同意用户协议，勾选上同意就可以下一步了，还有一个是要选择安装类型，安装类型的在左边点击最顶部的typical标准套餐就可以了。</p>
<p>最后，重启MarkdownPad就解决问题了。 </p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>还是那句老话了，遇到问题时善用搜索工具，先自己实践的尝试去解决，对于重要的文件一定要多备份数据，最好在备份数据上动手，以免损坏源文件什么的。</p>
<p>咱有一个问题就解决一个问题，不能让问题堆积如山，2333…</p>
<p>捋清思路之后，有针对的各个击破，问题就简单了</p>
<p>感谢阅读，么么扎~~</p>
<p>新年快乐！😁</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>吐槽</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>MarkdownPad</tag>
        <tag>笔记</tag>
        <tag>知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>三丰云免费主机和服务器的使用体验和感受</title>
    <url>/2020/05/10/test_sfy/</url>
    <content><![CDATA[<h1 id="开篇碎碎念"><a href="#开篇碎碎念" class="headerlink" title="开篇碎碎念"></a>开篇碎碎念</h1><p>今天母亲节啊，记得给自己的母亲大人打个电话什么的哦~~</p>
<p>博主今天突然想找一个免费主机试玩试玩，在经过一番的搜索引擎翻来覆去的看了之后，看到了三丰云，网路上关于它的文章也不少（推广续期，后面会讲到），貌似还不错，于是乎，就去他们官网注册了个账户想体验一番。</p>
<h1 id="关于三丰云"><a href="#关于三丰云" class="headerlink" title="关于三丰云"></a>关于三丰云</h1><p>他们自己说明的是北京太极三丰云计算有限公司旗下网络服务品牌，十八年IDC老兵团队蛰伏三年后投资千万于2018年10月1日创建。公司致力于为大众提供最优质的互联网基础服务和物联网服务，包括：域名注册、虚拟主机、云服务器、主机托管租用、CDN网站加速、物联网应用等服务。以帮助客户轻松、 高速、高效的应用互联网/物联网，提高企业竞争能力。</p>
<span id="more"></span>

<p>然后这边再给上免费服务器的截图：</p>
<p><img src="/img/sfy/sf01.png" alt="免费服务器"></p>
<h1 id="申请三丰云免费服务器的条件"><a href="#申请三丰云免费服务器的条件" class="headerlink" title="申请三丰云免费服务器的条件"></a>申请三丰云免费服务器的条件</h1><p>1、真实手机号码验证（测试阿里小号无法验证）</p>
<p>2、真实身份证信息验证（可能只能用自己的身份证了…）</p>
<p>3、实名认证每次1元，测试期每次0.3元人民币，不管有没有验证成功扣0.3元（并且平台充值最低为1元，坑！这里为了演示，博主血亏了1元。）</p>
<p><img src="/img/sfy/sf06.png" alt="实名认证充值1元"></p>
<p>4、免费用户使用windows系统需要缴2元安装费，默认的是CentOS，安装CentOS就不需要安装费。（服！）</p>
<p><img src="/img/sfy/sf02.png" alt="操作系统安装费"></p>
<p>免费服务器支持以下系统版本：</p>
<p>CentOS：6.5 7.0——7.6（纯净版），7.0宝塔面板（专用版）</p>
<p>Ubuntu：14.0 16.04纯净版</p>
<p>windows：Servre 2003，2008R2，2012R2</p>
<p>windows：7，10</p>
<p><img src="/img/sfy/sf03.png" alt="服务器宝塔登录面板"></p>
<h1 id="关于有效期和免费延期"><a href="#关于有效期和免费延期" class="headerlink" title="关于有效期和免费延期"></a>关于有效期和免费延期</h1><h2 id="有效期"><a href="#有效期" class="headerlink" title="有效期"></a>有效期</h2><p>首次开通：</p>
<p>为了节约系统资源，免费云服务器初始开通时24小时的使用时间，开通6小时后您可以进行免费延期操作。每次免费延期将可以免费延长一定的时间，通过免费延期您可以永久免费使用。</p>
<p>延期时间：每次最长延期5天。（免费主机是30天）</p>
<p>重要提示：</p>
<p>为了节约系统资源，把免费云服务器给最需要的人使用，避免用户一直重复开通免费云服务器。现在系统已经设定为每个用户免费开通1次，超过次数再次开通将收取一定的手续费。</p>
<p><img src="/img/sfy/sf04.jpg" alt="免费延期说明"></p>
<p><img src="/img/sfy/sf07.png" alt="免费服务器"></p>
<p><img src="/img/sfy/sf08.png" alt="免费虚拟主机"></p>
<h2 id="免费延期"><a href="#免费延期" class="headerlink" title="免费延期"></a>免费延期</h2><p>就是要你去各种社交网站或者论坛上面发帖，非常非常古老的推广方式了，不愧是十几年的老IDC了。并且发帖格式他还有一些限制，具体看下面截图吧：</p>
<p><img src="/img/sfy/sf05.jpg" alt="发帖网站推荐"></p>
<p><img src="/img/sfy/sf09.png" alt="发帖限制格式"></p>
<h1 id="吐槽总结"><a href="#吐槽总结" class="headerlink" title="吐槽总结"></a>吐槽总结</h1><p>免费玩玩还行，搭建好网站的速度方面其实还是挺不错的，不怎么建议一直使用，除非你确实挺喜欢发帖子或者时间充沛，能按时的去申请延期。</p>
<p>最后博主也就是玩耍了一下午这个三丰云，用是不会用的。</p>
<p>好了，今天的更博就这样吧，欢迎评论区留言。</p>
<p>PS：说是免费，博主好像为了演示实名认证还充值了1元啊，血亏！！</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>免费主机</tag>
        <tag>三丰云</tag>
        <tag>吐槽</tag>
      </tags>
  </entry>
  <entry>
    <title>当你更换电脑设备，怎么重新部署自己的Hexo博客</title>
    <url>/2020/04/07/hexo-rep/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经常会在不同的电脑设备上面进行更新博客，所以博主就需要经常的重新配置博客环境。</p>
<p>今天就更新一篇博文，整理一下这个东西。</p>
<p>给大家看，也是给我自己看，经常会忘记一些东西，这就当时一个笔记好了。</p>
<h1 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h1><p>哪些是我们必须拷贝文件：</p>
<span id="more"></span>

<p>├──_config.yml  #站点的配置<br>├── theme   # 主题<br>├── scaffolds  # 文章模板<br>├── package.json  # 说明使用哪些包<br>├── .gitignore  # 限定在提交的时候哪些文件可以忽略<br>└── source  #自己写的博客文件</p>
<p>其他文件自己酌情备份就好。</p>
<p>博主是直接在U盘上面进行操作的，所以本分这个东西相对来说少了一步，不过为了防止U盘损坏/丢失之类的，还是需要再多备份一个在别的设备上面去的。</p>
<h1 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h1><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>1丶最好是从官网Git下载git，在新电脑上安装。</p>
<p>因为https速度慢，而且每次都要输入口令，常用的是使用ssh，使用下面方法创建：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ git config --global user.name &quot;username&quot;</span><br><span class="line"></span><br><span class="line">$ git config --global user.email &quot;username@example.com&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2丶在用户主目录下运行： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C “youremail@example.com”</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>把其中的邮件地址换成自己的邮件地址，然后一路回车</p>
<p>3丶最后完成后，会在用户主目录下生成.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH key密钥对，id_rsa是私钥，千万不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。</p>
<p>4丶登陆GitHub，打开「Settings」-&gt;「SSH and GPG keys」，然后点击「new SSH key」，填上任意Title，在Key文本框里粘贴公钥id_rsa.pub文件的内容（千万不要粘贴成私钥了！），最后点击「Add SSH Key」，你就应该看到已经添加的Key。</p>
<p>【博主是把旧电脑的.SSH文件夹直接拷贝到了U盘，所以换电脑之后，是可以直接把文件夹复制过去就行了。】</p>
<h2 id="安装Node-JS"><a href="#安装Node-JS" class="headerlink" title="安装Node.JS"></a>安装Node.JS</h2><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>打开git bash客户端，输入 npm install hexo-cli -g，开始安装hexo<br>由于之前我是用 npm install hexo -g 安装的，此处我使用这个命令。因为我用 npm install hexo-cli -g命令安装后出现无法提交的情况，可能版本问题。</p>
<h1 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h1><p>在git bash中切换目录到新拷贝的文件夹里，使用 npm install 命令，进行模块安装。</p>
<p>不要用hexo init初始化，部分文件已经拷贝生成，如果不慎使用，则站点配置文件_config.yml会被初始化为默认值</p>
<h1 id="同步至Github"><a href="#同步至Github" class="headerlink" title="同步至Github"></a>同步至Github</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo d</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h1><h3 id="bash-hexo-command-not-found-问题"><a href="#bash-hexo-command-not-found-问题" class="headerlink" title="bash: hexo command not found 问题"></a>bash: hexo command not found 问题</h3><p>检查nodejs是否安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">node -v</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>检查npm是否安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">npm -v</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>检查之后，能够正常显示版本号，说明问题不是出在这里。</p>
<p>检查hexo相应模块是否安装，进入你的文件夹，查看node_modules。</p>
<p>检查环境变量（特别是win7的环境下），在 “计算机”右击属性，进入 高级环境配置 ，选择环境变量，在 Path 属性里添加你的node_modules文件夹下的 .bin 文件夹的路径。</p>
<h1 id="其它组件"><a href="#其它组件" class="headerlink" title="其它组件"></a>其它组件</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ npm install npm install hexo-deployer-git --save #同步内容至github，若前面同步不成功就安装这个</span><br><span class="line"></span><br><span class="line">$ npm install hexo-generator-feed --save #RSS订阅</span><br><span class="line"></span><br><span class="line">$ npm install hexo-generator-sitemap --save #站点地图</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>博主是直接在U盘上面操作的，所以可以省略一些步骤，只需要安装必要的软件程序，然后把秘钥文件复制到电脑的用户根目录就可以了。</p>
<p>相对来说简单不少。</p>
<p>OK，今天就这样，感谢阅读。</p>
]]></content>
      <categories>
        <category>知识点</category>
        <category>Hexo</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>HEXO</tag>
        <tag>博客搬家</tag>
      </tags>
  </entry>
  <entry>
    <title>把自己做的一些小工具app归类到了网站上</title>
    <url>/2020/04/03/mylist-app/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>蛮久没有更新博客了，实在是因为hexo更新博文不是很方便，而且，因为一些特殊原因呢，博主所在用的电脑经常被重装，导致系统之后，环境也经常要重新配置，这很麻烦。索性就不怎么更新了。哈哈哈2333….</p>
<p>然后，最近在群里面呢，经常看到一些有意思的东西，手动去处理就会显得略微的麻烦，所以呢，博主就是利用自己仅有的那么一丢丢的安卓开发的知识，在手机上面进行了一些小小的工具开发，实现一些自己想要的功能，坦白说，写这些工具的目的完全是为了方便自己，但是既然有朋友想要，那就分享出去呗。</p>
<p>挺有意思的是，群里面有一些从12年就开始跟着我的朋友，挺好的，我很欣慰。毕竟，人来人往，没有不散的宴席，能一路走来这么久，也是挺开心的吧。</p>
<h1 id="APP相关"><a href="#APP相关" class="headerlink" title="APP相关"></a>APP相关</h1><p>贴图就不贴了，为手机端省点流量，就简单的讲一下为什么要写这些App好了。</p>
<span id="more"></span>

<p>诸如，看到什么成语接龙红包啦，想不到什么成语，就像做一个按位置搜索成语的工具，于是乎就诞生了那个“按需成语”的app</p>
<p>再例如，逛博客的时候，要记录太多的博客地址，或者打开博客有的看起来特效太多了，花里胡哨的，我是比较喜欢那种稍微简洁的，所以呢，就做了一个rss订阅源的软件，这个的话上一篇博文里已经介绍过了，这里就不在多说。</p>
<p>然后还有，某短视频平台的视频下载，官方应用下载的视频都是带水印的，很不舒服，尽管注重版权没有什么错，但是吧…..你懂的。于是乎，视频解析程序就有了那样一个视频解析app。</p>
<p>其他的就不啰嗦了，这次把应用弄到一个单页列表什么展示，既能快速的查找到，又能快速的下载，方便多了。</p>
<h1 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h1><p>吖远zzy 原创安卓App下载列表：<a href="http://app.hzv5.cn" title="http://app.hzv5.cn">http://app.hzv5.cn</a></p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>如果你有什么想要对我提的建议，欢迎在评论区回复，或者在首页的关于界面，找到我的其他相关联系方式联系我。<br>感谢阅读。</p>
]]></content>
      <categories>
        <category>水文</category>
        <category>吐槽</category>
        <category>心情</category>
      </categories>
      <tags>
        <tag>安卓软件</tag>
        <tag>原创软件</tag>
        <tag>android App</tag>
      </tags>
  </entry>
  <entry>
    <title>一款博主自己写的博客订阅安卓APP</title>
    <url>/2019/11/30/add-rssblog/</url>
    <content><![CDATA[<h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>我发现我好想很喜欢缘起这个词，2333…</p>
<p>上个星期，在十年之约博主群看到有typecho的客户端软件，然后就想HEXO怎么没有？</p>
<p>博主就开始着手写这么个软件了，说出来你可能不太相信，这个软件是纯手机端撸的，完全没有用到电脑。</p>
<p>下面附几张软件界面截图：</p>
<span id="more"></span>

<p><img src="/img/RssBlog/rss-blog00.jpg" alt="软件关于"></p>
<p><img src="/img/RssBlog/rss-blog01.jpg" alt="订阅博客列表"></p>
<p><img src="/img/RssBlog/rss-blog02.jpg" alt="博客文章列表"></p>
<h1 id="碎言"><a href="#碎言" class="headerlink" title="碎言"></a>碎言</h1><p>不知道为什么写着写着就写成了这个样子，开始是单纯的客户端浏览博客就行了，写着写着就出来了一个订阅。23333…</p>
<p>首页一屏：自定义主浏览的博客</p>
<p>首页二屏：自定义订阅的RSS源（理论支持任意rss源，不仅仅是限于博客类的），长按选项可以编辑或删除项目</p>
<p>首页三屏：软件的关于</p>
<p>左滑菜单：支持三设置头像，博客名称自动显示首页一屏的 Title，收藏夹功能（包含你收藏的文章列表，长按收藏夹列表支持编辑和移除收藏）</p>
<p>首页二屏点击RSS源，打开文章列表，点击条目，打开显示想要阅读的文章，长按支持添加到收藏夹或去除收藏。</p>
<p>软件没什么技术含量，查找了一些必要的开源资料和教程。</p>
<p>就是基本上都只是简单的 webniew 以及 listview 的结合使用，从而诞生了这么一个软件。</p>
<p>软件还是个测试版，可能存在诸多的未知bug，若你下载使用或者体验刚好遇到了，希望你能通过软件联系方式或者博客留言反馈给我。</p>
<p>感谢！！</p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>暂时没有好的其他地址存，提供百度云下载地址</p>
<p>链接:<a href="https://pan.baidu.com/s/1GdjZGnOMyNqBFAIQuRv2vA">https://pan.baidu.com/s/1GdjZGnOMyNqBFAIQuRv2vA</a></p>
<p>提取码:41e3</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>好像有一段时间没有更新博客文章了，就借此app更新一波水文，让它看起来好像还活着！</p>
<p>2333…</p>
<p>感谢阅读，么么哒~</p>
]]></content>
      <categories>
        <category>吐槽大会</category>
        <category>知识笔记</category>
      </categories>
      <tags>
        <tag>博客订阅</tag>
        <tag>安卓软件</tag>
        <tag>原创软件</tag>
      </tags>
  </entry>
  <entry>
    <title>吹水一波，生活需要一丢丢的调节剂</title>
    <url>/2019/09/17/cnb-huawei/</url>
    <content><![CDATA[<h1 id="华为Mate30真机提前泄露"><a href="#华为Mate30真机提前泄露" class="headerlink" title="华为Mate30真机提前泄露"></a>华为Mate30真机提前泄露</h1><p>最近手机行业讨论比较火热，容易引起话题的无非就是华为了。</p>
<p>此前开发者大会，公布了鸿蒙系统以及开源了方舟编译器，着实让人佩服华为的眼界。</p>
<p>但是今天要吐槽的是，华为将在本月19号在慕尼黑发布的新旗舰机Mate30，吐槽的点不是手机本身，而是在于他的代理商职业素养和职业道德。</p>
<span id="more"></span>

<p>本身的话，对于一个旗舰手机的发布大家都是充满了期待的，虽然网络上各种猜测和爆料，也不太影响对该机的期待。</p>
<p>今天浏览网页突然一片名为“华为Mate30真机上手”的视频连接吸引了我，顶进去打开一看还真的是该机的真机。</p>
<p>附图两张：</p>
<p><img src="/img/HWMate30/M-01.jpg" alt="华为Mate30正面"><br><img src="/img/HWMate30/M-02.jpg" alt="华为Mate30背面"></p>
<p>要知道这是19号才开发布会的机型，视屏拍摄者居然视保密协议于不顾？</p>
<p>虽然只是大概展示了一下手机的外观和开机桌面，但是我感觉拍视频的这位兄弟已经凉了。2333…</p>
<h1 id="注销一些社交账号"><a href="#注销一些社交账号" class="headerlink" title="注销一些社交账号"></a>注销一些社交账号</h1><p>这两天新注册了一个手机号码，现代网络时代换个号码真的是及其的麻烦，各种的验证换绑，验证码短信来来回回收了不下四五十条。</p>
<p>把一些主流的社交软件（QQ/微信/微博等等…）更换了绑定，也注销了一些社交网站的账号：</p>
<p>简单说几个，例如：知乎（私聊“知一声”可获得注销知乎账号专属链接），酷安，soulApp（这些app设置里面就可以自助申请注销）等…</p>
<p><img src="/img/HWMate30/zhihu-01.jpg" alt="注销知乎1"><br><img src="/img/HWMate30/zhihu-02.jpg" alt="注销知乎2"></p>
<p>然后</p>
<p>这几天还得抽空去银行（中国银行/工商银行/农业银行…），把银行卡的预留号码也更改一下，想想就很累，所以没啥事不要随便的换号码，另外就是一定要注意保护自己的个人隐私。2333…</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>吐吐槽，更新一波水文，调剂一下博客的氛围，让它看起来更生活化！</p>
<p>感谢阅读，么么哒~</p>
]]></content>
      <categories>
        <category>吐槽大会</category>
      </categories>
      <tags>
        <tag>保密协议</tag>
        <tag>职业素养</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Git以及相关工具(Gitalk等等)在使用过程中的一些错误及解决办法</title>
    <url>/2019/08/17/About-Git-Err/</url>
    <content><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="1丶Gitalk评论工具一直Logging"><a href="#1丶Gitalk评论工具一直Logging" class="headerlink" title="1丶Gitalk评论工具一直Logging"></a>1丶Gitalk评论工具一直Logging</h2><p>今天突然地发现，yilia主题配置的Gitalk评论给你，点击登陆后一直处于Logging状态。</p>
<p>可能gitment作者那个服务器过期了，登陆时一直报Object ProgressEvent。</p>
<p>很大部分原因是因为js相关的东西没有加载出来导致的。</p>
<p>如图：</p>
<span id="more"></span>

<p><img src="/img/GitalkErr/logging.png" alt="一直处于登陆中"></p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>果然不出所料的就解决了，已yilia主题为例：</p>
<p>打开博客目录 <code>themes\yilia\layout\_partial\post\gitment.ejs</code> 将：</p>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;//imsun.github.io/gitment/style/default.css&quot;&gt;
&lt;script src=&quot;//imsun.github.io/gitment/dist/gitment.browser.js&quot;&gt;&lt;/script&gt;</code></pre><p>修改为：</p>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://jjeejj.github.io/css/gitment.css&quot;&gt;
&lt;script src=&quot;https://jjeejj.github.io/js/gitment.js&quot;&gt;&lt;/script&gt;</code></pre><p>或者是改为：</p>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://jjeejj.github.io/css/gitment.css&quot;&gt;
&lt;script src=&quot;https://www.wenjunjiang.win/js/gitment.js&quot;&gt;&lt;/script&gt;</code></pre><p>这样修改源文件之后，登陆时就不会再报错了，这也是别人的服务器，如果你怕再次失效之类的，你也可以自己搭建一个源文件服务器来支持你的需求2333。</p>
<h2 id="2丶Gitalk无法进行初始化创建Issue评论区"><a href="#2丶Gitalk无法进行初始化创建Issue评论区" class="headerlink" title="2丶Gitalk无法进行初始化创建Issue评论区"></a>2丶Gitalk无法进行初始化创建Issue评论区</h2><p>错误提示为：Error: Validation Failed（如图）</p>
<p><img src="/img/GitalkErr/zs.png" alt="无法初始化"></p>
<p>这种情况是因为Issue有字数限制的咯</p>
<h2 id="解决-1"><a href="#解决-1" class="headerlink" title="解决"></a>解决</h2><p>1.控制自己的文章名称数字长度，加上文章前面的地址和日期，总共不能超过50个字符。</p>
<p>2.修改主题的Gitalk评论ID获取项目，把获取地址改为获取标题，电视写文章的时候同样要控制标题的长度不要超过50个字符。</p>
<p><img src="/img/GitalkErr/zs02.png" alt="修改文件"></p>
<p>博主用的是yilia主题为例：</p>
<pre><code>id: &quot;&lt;%=url%&gt;&quot;</code></pre><p>修改为</p>
<pre><code>id: &quot;&lt;%=page.title%&gt;&quot;</code></pre><p>这样就可以把这个问题解决，可以愉快地创建评论咯。</p>
<h2 id="3丶换电脑后，执行-hexo-d-命令提示没有-Git-文件夹"><a href="#3丶换电脑后，执行-hexo-d-命令提示没有-Git-文件夹" class="headerlink" title="3丶换电脑后，执行 hexo d 命令提示没有 .Git 文件夹"></a>3丶换电脑后，执行 hexo d 命令提示没有 .Git 文件夹</h2><p>前两天也是在更换设备去更新博客，博主是直接把博客根目录下整个文件夹拷贝，放到U盘里面储存。</p>
<p>在新电脑上操作直接拷贝 .ssh 秘钥到相应的文件夹里就可以开始对博客进行操作了。</p>
<p>但是突然出现这样一个问题：博客能够正常编译(即 hexo g)，也能正常本地预览(即 hexo s)，就是提交到远程Git仓库的时候总报没有 <code>.Git</code> 文件夹:</p>
<pre><code>fatal: not a git repository (or any of the parent directories): .git</code></pre><h2 id="解决-2"><a href="#解决-2" class="headerlink" title="解决"></a>解决</h2><p>搜索引擎给出的答案，大部分用户都是能够直接使用 <code>git init</code> 进行初始化恢复，但是我这边使用该指令并没有达到想要效果，甚至还产生了其他的问题或错误。</p>
<p>然后解决办法就是：</p>
<p>删除博客根目录的 <code>.deploy_git</code> 文件夹</p>
<p>然后使用命令 <code>hexo deploy</code> 重新创建该文件夹</p>
<p>就会自动生成 <code>.git</code> 文件夹在里面，支持博主的问题也就解决了，顺利发布了今天这篇文章。 </p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总结啥，纯粹是为了让叶看起来更加完整而已。</p>
<p>遇到一个问题就解决问题，不能让问题堆积如山，2333…</p>
<p>捋清思路之后，有针对的各个击破，问题就简单了</p>
<p>么么扎~~</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>笔记</tag>
        <tag>知识点</tag>
        <tag>Gitalk</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo实现文章加密和文章置顶的方法与演示</title>
    <url>/2019/07/15/encode-top-test/</url>
    <content><![CDATA[<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="密码是[你好]两个字的拼音字母" />
    <label for="pass">密码是[你好]两个字的拼音字母</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">

</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客优化</tag>
      </tags>
  </entry>
  <entry>
    <title>百度文字合成语音的api接口，以及其他失效的接口，找了新的免费语音接口！</title>
    <url>/2019/01/11/baidu-yuyin/</url>
    <content><![CDATA[<h1 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h1><p>有朋友博文<a href="http://www.hzv5.cn/index.php/archives/29.html'">自写与收集的一些免费的API接口（获取QQ昵称、头像、QQ秀等等…）</a>的评论里留言说，收集的api接口，有的已经失效了</p>
<p>也抽空看了，有几个确实是已经失效了，QQ秀的接口暂时没有找到新的</p>
<p>今天是找了下语音接口，就是文字转成语音的接口</p>
<p>其他的不多说了</p>
<p>直接开始贴接口地址，和参数说明吧</p>
<h1 id="1丶文字转语音"><a href="#1丶文字转语音" class="headerlink" title="1丶文字转语音"></a>1丶文字转语音</h1><p>① 接口地址：</p>
<span id="more"></span>
<pre><code>https://ai.baidu.com/aidemo?type=tns2&amp;idx=1&amp;&amp;cuid=baidu_speech_demo&amp;cod=2&amp;lan=zh&amp;ctp=1&amp;pdt=1&amp;spd=5&amp;per=0&amp;vol=5&amp;pit=5&amp;tex=需要转换的文字内容</code></pre><h1 id="2丶文字转语音"><a href="#2丶文字转语音" class="headerlink" title="2丶文字转语音"></a>2丶文字转语音</h1><p>② 接口地址：</p>
<pre><code>http://tts.baidu.com/text2audio?idx=1&amp;cuid=baidu_speech_demo&amp;cod=2&amp;lan=zh&amp;ctp=1&amp;pdt=1&amp;spd=5&amp;per=1&amp;vol=9&amp;pit=5&amp;tex=需要转换的文字内容</code></pre><h1 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h1><pre><code>cuid：是程序id，默认的这个是百度测试demo，需要自己单独的id可以去百度语音官网申请。
per：男声0，女声1
spd：速度参数，1~10，数字越大语音速度越快
pit：变声参数，1~10，数字越小越低沉，数字越大音调越高
tex：文本内容，也就是你要转换成语音的文字</code></pre><p>GET请求接口，会得到一个aidemo文件，后缀改成任意能识别的音频文件名称即可播放。</p>
<p>其他几个参数貌似没什么变化，暂时不知道是什么，可以自己改变一下数字试一下。</p>
<p>暂时先这样，</p>
<p>失效的接口到时候找到了新的再新增到这里。</p>
<p>失效了的，直接评论里留言即可</p>
<h1 id="么么扎！"><a href="#么么扎！" class="headerlink" title="么么扎！"></a>么么扎！</h1>]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>语音识别</tag>
        <tag>语音合成</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 利用腾讯开放平台的官方SDK，实现自定义QQ分享。并备份一下android-support-v7安卓支持包！</title>
    <url>/2018/10/28/android-qq-share/</url>
    <content><![CDATA[<h1 id="开头废话"><a href="#开头废话" class="headerlink" title="开头废话"></a>开头废话</h1><p>前些日子换了手机，旧手机上的数据忘了迁移备份就急急忙忙的重置格式化了，很难受！开发的一些APP源码也就给丢失了，然后只好去自己的群里面，找到曾经上传的旧版本，把他反编译出来一点点的还原。</p>
<p>逆向始终不是自己会玩的东西，所以效果很不理想，特别是我这种纯手机端进行编写操作的编程爱好者。蓝瘦香菇！</p>
<p>今天想要说一下那个自定义QQ分享的东西，官方文档以及demo最近也好像是做了一下更新。最烦的就是更新了的文档也不是那么的简洁明了，实在不是很适合给一般的coder看￣ ￣)σ。</p>
<p>好吧，还是直接去开始吧。</p>
<h1 id="开整"><a href="#开整" class="headerlink" title="开整"></a>开整</h1><span id="more"></span>

<p>1丶打开我的AIDE…</p>
<p>2丶新建工程项目</p>
<p>3丶到<a href="http://wiki.open.qq.com/wiki/mobile/SDK%E4%B8%8B%E8%BD%BD">QQ开放平台</a> 下载SDK</p>
<p>4丶解压SDK，把两个jar包导入工程项目的libs文件夹，没有这个文件夹自己新建一下</p>
<p>5丶然后，我们就可开始码代码了</p>
<p>6丶首先配置一下AndroidManifest文件，权限设置和注册Activity</p>
<p>权限代码：</p>
<pre><code>&lt;!-- APP联网所需权限 --&gt;
&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot; /&gt;
&lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot; /&gt;
&lt;!-- 在SDCard中创建和删除文件的权限 --&gt; 
&lt;uses-permission 
    android:name=&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot; /&gt; 
&lt;!-- 往SDCard中写入数据的权限 --&gt;
&lt;uses-permission 
    android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;</code></pre><p>当然，以上权限并不全都用的上或者不够，可以根据自己的需求进行增减。</p>
<p>然后是SDK需要的Activity注册了，一下代码放入到<application>标签中即可：</p>
<pre><code>&lt;!-- 注册SDKActivity --&gt;
&lt;activity
    android:name=&quot;com.tencent.tauth.AuthActivity&quot;
        android:noHistory=&quot;true&quot;
        android:launchMode=&quot;singleTask&quot; &gt;
        &lt;intent-filter&gt;
            &lt;action android:name=&quot;android.intent.action.VIEW&quot; /&gt;
            &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
            &lt;category android:name=&quot;android.intent.category.BROWSABLE&quot; /&gt;
            &lt;data android:scheme=&quot;tencentID1106885928&quot; /&gt; &lt;!-- 获取的APPID --&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;</code></pre><p>新版的SDK增加了AssistActivity，所以也要在这里给他加上去</p>
<pre><code>&lt;activity android:name=&quot;com.tencent.connect.common.AssistActivity&quot;
       android:theme=&quot;@android:style/Theme.Translucent.NoTitleBar&quot;
       android:configChanges=&quot;orientation|keyboardHidden|screenSize&quot; /&gt;</code></pre><p>配置好了之后，就开始写java代码了。</p>
<p>首先，创建实例。Tencent是SDK的功能入口，所有的接口调用都得通过Tencent进行调用。因此，调用SDK，首先需要创建一个Tencent实例，其代码如下：</p>
<pre><code>private static final String APP_ID = &quot;1106885928&quot;; // appid跟换成你自己的，可以在开放平台新建应用之后获取
private Tencent mTencent;
    //传入参数APPID
    mTencent = Tencent.createInstance(APP_ID, MainActivity.this.getApplicationContext());</code></pre><p>   接下来就是实现回调，也就是你分享东西出去是成功了还是失败了，又或者是用户取消了分享呢？具体就是：</p>
<pre><code>/**
* 自定义监听器实现IUiListener，需要3个方法
*
* onComplete完成 onError错误 onCancel取消
*/

private class ShareUiListener implements IUiListener
&#123;
    @Override
    public void onComplete(Object response)
    &#123;
        //分享成功
        def_note(&quot;成功分享！&quot;);
    &#125;
    @Override
    public void onError(UiError uiError)
    &#123;
        //分享失败
        def_note(&quot;分享失败！&quot;);
    &#125;
    @Override
    public void onCancel()
    &#123;
        //分享取消
        def_note(&quot;您取消了分享！&quot;);
    &#125;
&#125;

/**
 * 回调
 *
 * @param requestCode
 * 
 * @param resultCode
 * @param data
 */
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data)
&#123;
    if (null != mTencent)
    &#123;
        mTencent.onActivityResult(requestCode, resultCode, data);
    &#125;
&#125;</code></pre><p>到这里就基本上搞好了。</p>
<p>然后就是对官方文档里面提到的api数据封装功能函数，可以分享链接，音乐，图片，应用这些东西，具体就是这样：</p>
<pre><code>/**
 * 分享到QQ
 * @param v
 */
public void qqShare(String t, String s, String u, String p, String w)
&#123;
    final Bundle params = new Bundle();
    params.putInt(QQShare.SHARE_TO_QQ_KEY_TYPE, QQShare.SHARE_TO_QQ_TYPE_DEFAULT);//分享的类型
    params.putString(QQShare.SHARE_TO_QQ_TITLE, t);//分享标题
    params.putString(QQShare.SHARE_TO_QQ_SUMMARY, s);//要分享的内容摘要
    params.putString(QQShare.SHARE_TO_QQ_TARGET_URL, u);//内容地址
    params.putString(QQShare.SHARE_TO_QQ_IMAGE_URL, p);//分享的图片URL
    params.putString(QQShare.SHARE_TO_QQ_APP_NAME, w);//应用名称
    mTencent.shareToQQ(MainActivity.this, params, new ShareUiListener());
&#125;

/**
 * 分享到QQ空间
 * @param v
 */
public void qqQzoneShare(String t, String s, String u, String p, String w)\r\n    &#123;\r\n        int QzoneType = QzoneShare.SHARE_TO_QZONE_TYPE_NO_TYPE;\r\n        Bundle params = new Bundle();
    params.putInt(QzoneShare.SHARE_TO_QZONE_KEY_TYPE, QzoneType);
    params.putString(QzoneShare.SHARE_TO_QQ_TITLE, t);//分享标题
    params.putString(QzoneShare.SHARE_TO_QQ_SUMMARY, s);//分享的内容摘要
    params.putString(QzoneShare.SHARE_TO_QQ_TARGET_URL, u);//分享的链接
    //分享的图片, 以ArrayList&lt;String&gt;的类型传入，以便支持多张图片（注：图片最多支持9张图片，多余的图片会被丢弃）
    ArrayList&lt;String&gt; imageUrls = new ArrayList&lt;String&gt;();
    imageUrls.add(&quot;http://www.hzv5.cn/logo.jpg&quot;);//添加一个图片地址
    params.putStringArrayList(QzoneShare.SHARE_TO_QQ_IMAGE_URL, imageUrls);//分享的图片URL
    mTencent.shareToQzone(MainActivity.this, params, new ShareUiListener());
&#125;

/**
 * 分享音乐
 * @param v
 */
private void qqAudioShare(String t, String s, String u, String p, String w)
&#123;
    int ii = def_getNum(0, songlist.length - 1);
    final Bundle params = new Bundle();
    params.putInt(QQShare.SHARE_TO_QQ_KEY_TYPE, QQShare.SHARE_TO_QQ_TYPE_AUDIO);
    params.putString(QQShare.SHARE_TO_QQ_TITLE, t);
    params.putString(QQShare.SHARE_TO_QQ_SUMMARY,  s);
    params.putString(QQShare.SHARE_TO_QQ_TARGET_URL,  u);
    params.putString(QQShare.SHARE_TO_QQ_IMAGE_URL, p);
    params.putString(QQShare.SHARE_TO_QQ_AUDIO_URL, songlist[ii]);
    params.putString(QQShare.SHARE_TO_QQ_APP_NAME,  w);
    //params.putInt(QQShare.SHARE_TO_QQ_EXT_INT, QQShare.SHARE_TO_QQ_FLAG_QZONE_AUTO_OPEN);
    mTencent.shareToQQ(MainActivity.this, params, new ShareUiListener());
&#125;</code></pre><p>到这里整个工程项目的QQ自定义分享基本上就完成了，这里算是给自己也做了一份备份。</p>
<h1 id="V4，V7支持包"><a href="#V4，V7支持包" class="headerlink" title="V4，V7支持包"></a>V4，V7支持包</h1><p>另外再备份两个东西，那就是安卓的android-support-v4，和v7支持包，特别是v7包，网上找的全是那种缺胳膊少腿的，找个完整的v7找了我两天时间！这个是安卓25版本的。</p>
<p>不是最新，但是够用就行了。</p>
<p>v4下载链接：<a href="https://pan.baidu.com/s/1aotD4JKcPgwje1a4cPsfqg">点击下载v4 提取码：65o3</a></p>
<p>v7下载链接：<a href="https://pan.baidu.com/s/1TuK2qB5lzy6JC8ymcJxBbA'">点击下载v7 提取码：n54t</a></p>
<p>OK，?完美！</p>
<p>笔芯❤！</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>QQ分享</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Android自定义QQ分享提示未正确授权，错误码901115</title>
    <url>/2018/08/15/QQshare-Err/</url>
    <content><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>最近，QQ更新了一个成语接龙玩法的红包</p>
<p>于是乎，博主突然就想搞一个成语查询的工具2333，在给App添加一个分享应用到QQ的时候，发现出现一个错误提示，都是按之前的app写法写的，怎么就报错了，于是乎找到几个之前写的app发现也是一样报这个错误了：</p>
<p>错误提示如图：</p>
<span id="more"></span>

<p><img src="/img/QQshareErr/01.png" alt="QQ分享错误示例"></p>
<p>然后感觉就是，是不是因为QQ互联官网更新了QQ分享的SDK，于是乎，我打开了官网一看，还真的是，顶部出现了一条醒目的公告提示，这个提示已经有一段时间了，怪我最近没怎么做相关开发，没注意23333…</p>
<p>参考： <a href="https://wiki.connect.qq.com/%E5%8A%A0%E5%BC%BAqq%E4%BA%92%E8%81%94%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8-android%E5%8C%85%E5%90%8D%E5%92%8C-ios-bundleid-%E6%A0%A1%E9%AA%8C%E7%9A%84%E9%80%9A%E7%9F%A5%EF%BB%BF" title="加强QQ互联移动应用 Android包名和 iOS Bundleid 校验">加强QQ互联移动应用 Android包名和 iOS Bundleid 校验</a></p>
<p>一看公告，这个校验新方法已经是5月30日开始的了，我这是多久没关注相关的应用使用QQ分享了23333</p>
<h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>根据公告说的，是为了保障QQ用户的安全，以免被恶意盗用，加强了应用的校验，如不进行信息完善，应用将无法登录和分享至QQ好友和QQ群，所以我们补全信息即可。我们进入QQ互联平台登记的应用：QQ互联官网：<a href="https://connect.qq.com/index.html" title="QQ互联官网 - 应用管理">QQ互联官网 - 应用管理</a> 应用管理中进行补充；</p>
<p><strong>（修改路径为：应用管理 – 移动应用 – 查看（应用）– 基础信息 – 平台信息 – 修改）</strong></p>
<p><img src="/img/QQshareErr/02.png" alt="进入应用"></p>
<p><img src="/img/QQshareErr/03.png" alt="修改应用信息"></p>
<p>进入修改应用信息后，添加用到该APPID的应用包名以及签名，每个APPID最多支持6组app共用。</p>
<p><img src="/img/QQshareErr/04.png" alt="添加应用包名与签名"></p>
<p>还有就是别忘了应用接口权限别忘了看一看有没有获取打开</p>
<p><img src="/img/QQshareErr/05.png" alt="管理应用权限"></p>
<h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>到这里就解决了这个错误码为901115的QQQ分享报错了。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>一个不算问题的问题，出于平时使用频率小，导致没怎么关注这个，当使用的时候就一脸懵逼</p>
<p>捋清思路之后，问题就简单了</p>
<p>么么扎~~</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>知识点</tag>
        <tag>Android</tag>
        <tag>QQ分享</tag>
      </tags>
  </entry>
  <entry>
    <title>吐槽一下下，关于最近的社交软件开放的账号销户功能！</title>
    <url>/2018/05/04/tucao-sjirji/</url>
    <content><![CDATA[<p>此前，是在QQ群里看到QQ账号可以注销的消息的，用了十几年QQ了，第一次听到QQ可以注销</p>
<p>【PS：此注销不是退出登录，而是直接把QQ账号销户】。</p>
<img src="http://api.hzv5.cn/images/IMG_QQxh_01.jpg" width="300" height="637" title="" alt=""/>

<p>但是腾讯是不是太天真了？</p>
<p>用了十几年的QQ我们会想要注销？</p>
<span id="more"></span>

<p>知不知道QQ对于我们八零九零意味着什么？(｡･ˇ_ˇ･｡)是不是脑子有泡？</p>
<p>这不，才上线没多久的QQ号码销户入口，今天再去看的时候就蜜汁消失了！突然的突然的开放销户又突然的关闭，不知道是什么原因，很迷！</p>
<p>然后今天是因为收到一个UC浏览器的推文《<a href="https://mparticle.uc.cn/article.html?uc_param_str=frdnsnpfvecpntnwprdssskt&client=ucweb&wm_cid=220813119445534720&wm_id=04fcc49832dc4f04ae8b82194e6bf87c&title_type=1&pagetype=share&app=uc-iflow&btifl=100&wm_aid=10625dbef0684f75800da634f77f3a6a&sdkdeep=2&sdksid=bfe73bdb-01cf-eafe-89a6-7cafb58185e1&sdkoriginal=bfe73bdb-01cf-eafe-89a6-7cafb58185e1" target="_blank" title="工信部一锤定音: 再见了微信微博!">工信部一锤定音: 再见了微信微博!</a>》，UC的小编我是真的很佩服的，同一件事和主人公，可以写N个故事！把文章标题也是命名的极其吸引人！(抱拳了，老铁！)。看了这水文之后，就去看了一下微信和微博，发现确实是可以注销账号了！</p>
<p>如下两图：</p>
<p><img src="http://api.hzv5.cn/images/IMG_QQxh_02.png" width="317" height="952" title="" alt=""/>    <img src="http://api.hzv5.cn/images/IMG_QQxh_03.png" width="317" height="988" title="" alt=""/></p>
<p>然而，注销账号似乎并没有那么简单，首先你得把账号里的钱填平，还有平时在别的APP或者网站上的快捷登录授权解除才可以！具体看下面注销微信和微博的两个截图：</p>
<p><img src="http://api.hzv5.cn/images/IMG_QQxh_05.png" width="317" height="852" title="" alt=""/>    <img src="http://api.hzv5.cn/images/IMG_QQxh_04.png" width="317" height="952" title="" alt=""/></p>
<p>说起来也是，自己主动注销的话，各种限制，极其不愿意让你销户，这让我想起了两个比较”有意思的”电脑杀毒软件，也不知道是什么情况下安装的，自己都不知道，卸载的时候弹出N次选择框让你确认，还故意把确认卸载按钮颜色弄成暗色，把取消下载弄成高亮色！</p>
<p>甚至一会儿确认在右边，一会儿在左边！呵呵哒…不知道正在看此篇博文的你有没有遇到过这种极其”流氓”的软件！</p>
<p>主动销户困难，但是”被”销户就死很简单的事！<br>只要你违规了该APP的一些规定！他们就可以冻结你的账号，甚至是直接销户！也就不管你有没有把坑填平或者解除账号授权什么的了，这是一种什么操作？</p>
<p>现在手机软件、社交媒体、购物平台等网络账号中很少有提供注销账号的服务。一旦用户注册账号，即使不再使用，此前其注册信息、购买记录、好友通讯录等都还将继续储存在平台系统中。</p>
<p>而且很多软件和平台为了推广，各种吸引眼球的广告吸引大家去注册试用，但是大部分情况下这些软件和平台并不是我们需要的，很多注册了发现不是自己需要的，就直接关掉或卸载不管了。<br>因此现在用户的个人资料很容易会被泄露。</p>
<p>很多的APP都会读取我们的手机通讯录，地理位置等信息，乍看之下，无非就是多几个废弃的账号而已，但随着个人资料和信息权利重要性的提升，保留在账户里面的所有个人资料都有可能被利用、贩卖，大大增加用户隐私泄露的风险。</p>
<p>所以大家要是有注册了一些平台或APP账号，又没有使用的话最好及时注销掉，这些不用的账号说不好很有可能会泄露你，甚至是家人朋友的个人隐私，注销掉不仅能减少自身风险，以后换号码也简单多了。</p>
<p>为什么手机号码用久了，广告短信息越来越多？这会儿应该不言而喻了吧！个人是很赞成工信部出来管制的，任何平台都应该开放用户主动注销账号的权限！</p>
<p>五一期间大家都在更博，我实在是没什么可以拿出来的，今天就借UC推文码了一堆口水文！2333…</p>
<p>食用完水文，记得流行评论，发变一下你的看法！</p>
]]></content>
      <categories>
        <category>收集控</category>
      </categories>
      <tags>
        <tag>免费api</tag>
        <tag>接口收集</tag>
      </tags>
  </entry>
  <entry>
    <title>关于新版彩虹代刷hashsalt值如何还原出真实值</title>
    <url>/2018/04/23/caihong-encode/</url>
    <content><![CDATA[<p>最近在qq群上，有朋友要求我更新一下免费领赞(QQ名片赞)App(极其无聊的app但是喜欢的人却很多)，</p>
<p>以为老接口都失效了，然后去研究了一下代刷站点发现，新版本的彩虹代刷程序增加了hashsalt值 + cookies值方式的验证，</p>
<p>其主要目的可能就是为了加大写软件的难度，以及防止恶意刷单！</p>
<p>直接查看代刷站源码，可以看到hashsalt值大概是这样的：</p>
<span id="more"></span>

<pre><code>function getHashsalt() &#123;
   var hashsalt
    return hashsalt;
&#125;</code></pre><p>这看着着实让人很懵。</p>
<p>然后搜了一下发现，精易论坛的大佬[@l1294066497]以及把怎么得到准确的hashsalt值，用易语言的方法发出来了。</p>
<p>就是直接调用<code>V8 JavaScript</code>引擎处理即可，关于该引擎可详见百度百科介绍：<a href="https://baike.baidu.com/item/V8/6178125" title="V8 JavaScript 引擎">https://baike.baidu.com/item/V8/6178125</a></p>
<p>还原hashsalt值，以及如何得到cookies值的易语言方法的代码如下图所示：</p>
<img src="http://api.hzv5.cn/images/01.png" alt="hzv5.cn"/>

<p>最后是测试运行，调试结果如下：</p>
<img src="http://api.hzv5.cn/images/02.png" alt="hzv5.cn"/>


]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>彩虹代刷</tag>
        <tag>算法解密</tag>
      </tags>
  </entry>
  <entry>
    <title>最近有一件很神奇的事情发生，哈哈！</title>
    <url>/2018/03/16/waooooo/</url>
    <content><![CDATA[<h1 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h1><p>最近两个星期，有一件很神奇的事情。</p>
<p>不知道什么时候的事情了，在手机端利用AIDE写了一个吉普赛读心术的app，最初是尝试的心态上架了百度手机助手，但是没想到通过审核了。</p>
<p>后来没做什么更新，(大概三个月左右之后)就被下架了。</p>
<p>APP的主界面大概长这个样子：</p>
<span id="more"></span>

<img src="//api.hzv5.cn/images/dx_01.jpg" title="1521255490853660.png" alt="Screenshot_2018-03-17-09-38-19-00.png"/>

<p>最近有几位兄弟找到我，询问关于这个软件的原理是什么！</p>
<p>我这边都是4字真言回复了他们：</p>
<p>9的倍数！（这算是高冷嘛？）</p>
<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>具体原理是这样的：</p>
<p>先来大概看一下流程，app的规则如下：</p>
<img src="//api.hzv5.cn/images/dx_02.jpg" title="1521255508536007.png" alt="Screenshot_2018-03-17-09-43-52-06.png"/>

<p>（有的朋友看了规则就说，算法是固定的，你直接按照那个算法倒推回去不就是答案了嘛？其实不然，因为系统并不知道最初用户选择的是什么数字，更不知道用户通过算法计算之后的数字是什么！）</p>
<p>然后这是用户寻找计算数字对应的符号的界面：</p>
<img src="//api.hzv5.cn/images/dx_03.jpg" title="1521255529244927.png" alt="Screenshot_2018-03-17-09-43-27-23.png"/>

<p>然后是系统给出答案的界面：<br><img src="//api.hzv5.cn/images/dx_04.jpg" title="1521255562746837.png" alt="Screenshot_2018-03-17-09-43-42-39.png"/></p>
<p>4字真言“9的倍数”说的是：</p>
<p>当用户心里默选了一个两位数的数字之后，通过上面提到的规则进行计算，得到的任何一个新的数字，必定是一个9的倍数，所以只需要将列表中的9的倍数对应的符号全部显示成一样的就可以了，最后再显示结果！</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>(知道了原理，就像魔术被解密了一样，变得了无生趣了，有木有？)</p>
<p>还是很好奇他们是从哪里下载的APP.</p>
<img src="http://img.baidu.com/hi/jx2/j_0078.gif"/>
在这里再次放一下APP的链接吧，有兴趣怼我拿去玩儿

<h1 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h1><p>链接:<a href="https://pan.baidu.com/s/1fbz5Wbgex54NVoRW3mrmwQ">https://pan.baidu.com/s/1fbz5Wbgex54NVoRW3mrmwQ</a> 密码:7cu8</p>
<img src="http://img.baidu.com/hi/jx2/j_0057.gif">]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>吐槽</tag>
      </tags>
  </entry>
  <entry>
    <title>php自写api数据接口实例笔记</title>
    <url>/2018/01/30/php-api/</url>
    <content><![CDATA[<p>php写api接口起初是因为自己在玩机器人软件，需要进行数据交互，例如看笑话，查天气，查快递等等的一些数据，来丰富机器人的功能，现在本站暂时保留着两个就博客的api接口，<img src="http://img.baidu.com/hi/face/i_f08.gif"/></p>
<p>css什么的失效了，暂时没去管：</p>
<pre><code>1· http://www.hzv5.cn/api/ai.php

2· http://www.hzv5.cn/api/sina_url.php</code></pre><img src="http://img.baidu.com/hi/face/i_f05.gif"/>

<p>下面就来看看怎么自己写一个api接口吧：</p>
<p>实例代码：</p>
<span id="more"></span>

<pre><code>&lt;?php
  $output = array();  $a = @$_GET[&quot;a&quot;] ? $_GET[&quot;a&quot;] : &quot;&quot;;
  $uid = @$_GET[&quot;uid&quot;] ? $_GET[&quot;uid&quot;] : 0;\r\n  if (empty($a)) &#123;
    $output = array(&quot;data&quot;=&gt;NULL, &quot;info&quot;=&gt;&quot;非常抱歉，缺少参数!&quot;, &quot;code&quot;=&gt;-201);
    exit(json_encode($output));
  &#125;
  //接口走的端口
   if ($a == &quot;get_users&quot;) &#123;
     //检查用户
     if ($uid == 0) &#123;
       $output = array(&quot;data&quot;=&gt;NULL, &quot;info&quot;=&gt;&quot;The uid is null!&quot;, &quot;code&quot;=&gt;-401);
       exit(json_encode($output));
     &#125;
     //假设 $mysql 是数据库或者从网络读取的数据
     $mysql = array(
       10001 =&gt; array(
         &quot;uid&quot;=&gt;10001,
         &quot;vip&quot;=&gt;5,
         &quot;nickname&quot; =&gt; &quot;Shine X&quot;,
         &quot;email&quot;=&gt;&quot;88888888@qq.com&quot;,
         &quot;qq&quot;=&gt;88888888,
         &quot;ctime&quot;=&gt;1320321234,
         &quot;lastLogin&quot;=&gt;1321121144,
         &quot;level&quot;=&gt;19
       ),10002 =&gt; array(
         &quot;uid&quot;=&gt;10002,
         &quot;vip&quot;=&gt;3,
         &quot;nickname&quot; =&gt; &quot;elva&quot;,
         &quot;email&quot;=&gt;&quot;99999999@qq.com&quot;,
         &quot;qq&quot;=&gt;NULL,
         &quot;ctime&quot;=&gt;1372323234,
         &quot;lastLogin&quot;=&gt;1371122114,
         &quot;level&quot;=&gt;12,
       )
     );
     //检测查询的数据是否注册存在
     $uidArr = array(10001,10002);
     if (in_array($uid, $nickname, true)) &#123;
       $output = array(&quot;data&quot; =&gt; NULL, &quot;info&quot;=&gt;&quot;The user does not exist!&quot;, &quot;code&quot; =&gt; -402);
       exit(json_encode($output));
     &#125;
     //存在的开始查询数据库
     $userInfo = $mysql[$uid];
     //输出数据
     $output = array(
       &quot;data&quot; =&gt; array(&quot;userInfo&quot; =&gt; $userInfo),
       &quot;info&quot; =&gt; &quot;Here is the message which, commonly used in popup window&quot;, //返回消息提示
       &quot;code&quot; =&gt; 200, //成功与失败的代码，一般都是正数或者负数
     );
     exit(json_encode($output));
     //其他端口查询还可以自己再继续添加，方法同上
   &#125; elseif ($a == &quot;get_result&quot;) &#123;
     //...
     die(&quot;您正在调 get_result 接口!&quot;);
   &#125; elseif ($a == &quot;get_upload&quot;) &#123;
     //....
     die(&quot;您正在调 get_upload 接口!&quot;);
   &#125;</code></pre><p>OK，以上便是自写api接口进行服务器和客户端之间交互的实例~</p>
<p><img src="http://img.baidu.com/hi/face/i_f07.gif"/>很简单吧，有什么不懂的可以留言评论~</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>php接口</tag>
        <tag>api写法</tag>
      </tags>
  </entry>
  <entry>
    <title>php打开网页链接请求http连接的方法</title>
    <url>/2018/01/28/php-http/</url>
    <content><![CDATA[<h1 id="碎言碎语"><a href="#碎言碎语" class="headerlink" title="碎言碎语"></a>碎言碎语</h1><p>咱们如果是玩php非静态网站，进行网页链接请求获取需要的数据，是必不可少的，不然难道“单机”不成？</p>
<p>全部数据文件本地化？这好像是静态网站的模式，而且就算是静态网站也不完全是静态的，也有js加持。</p>
<p>这显然不太现实了吧~~</p>
<h1 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h1><p>利用php的curl函数进行封装，具体代码如下：</p>
<span id="more"></span>
<pre><code>function http_request($url,$timeout=30,$header=array())&#123;
    if (!function_exists(&quot;curl_init&quot;)) &#123;
        throw new Exception(&quot;server not install curl&quot;);
    &#125;
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HEADER, true);
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_TIMEOUT, $timeout);
    if (!emptyempty($header)) &#123;
        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);
    &#125; 
    $data = curl_exec($ch);
    list($header, $data) = explode(&amp;quot;\\r\\n\\r\\n&amp;quot;, $data);
    $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    if ($http_code == 301 || $http_code == 302) &#123; 
        $matches = array();
        preg_match(&quot;/Location:(.*?)\\n/&quot;, $header, $matches);
        $url = trim(array_pop($matches));
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_HEADER, false);
        $data = curl_exec($ch);
    &#125;
    if ($data == false) &#123;
        curl_close($ch); 
    &#125; 
    curl_close($ch);
    return $data;
&#125;</code></pre><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>这个封装好了是可以直接套用的，也对301/302重定向的网页进行了进一步的处理！</p>
<p>ps：由于博客显示愿意，请注意url之类的符号，需要转码还原。</p>
<p>打开https链接的网页也是可以的~</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>php相关</tag>
        <tag>函数封装</tag>
      </tags>
  </entry>
  <entry>
    <title>coding pages托管项目是有点小尴尬~</title>
    <url>/2018/01/25/coding-pages/</url>
    <content><![CDATA[<h1 id="小尴尬"><a href="#小尴尬" class="headerlink" title="小尴尬"></a>小尴尬</h1><p>静态的程序不知道，反正类似于emlog以及现在本站正在使用的typecho程序来说，</p>
<p>各种奇奇怪怪的问题，coding官方是说 ：还在公测阶段。</p>
<p>如果你是手机端操作代码进行托管，而非使用git操作的，使用coding pages就会有这样的情况：<br>（ps因为emlog官方版本的最新版不支持php7.0，所以这里测试使用的是 @疯狂老司机 前辈自制的emlog6.0特别版。</p>
<span id="more"></span>
<p>而typecho测试使用的是官方最新的1.1版本。另外，鄙人完全是在手机端进行的项目测试~）</p>
<p>手机端上传项目代码到coding pages安装完程序后，如果编辑了项目代码，就要进行项目的重新部署，对于emlog和typecho，都会导致程序需要重新安装，typecho的话还有config文件记录，安装程序会提示使用原有数据安转访问。而emlog就不一样了，旧数据直接丢失~</p>
<p>emlog安装完不能删除install文件，因为程序会自己往该文件上跳，然后在进行首页访问。如果我们删除该文件的话网站就会404，不删除就可以继续访问重装程序，这是很不安全的。而typecho尚好，安装完可以正常访问，install文件也不需要删除，程序自动屏蔽掉了！</p>
<p>coding编辑项目貌似现在不能修改文件名称，创建文件夹以及删除文件。必须使用git/命令行进行操作。</p>
<p>coding可以免费使用https/SSL服务，这一点还是好的。但是至今我没看到怎么关闭SSL服务。这就导致频繁编辑项目之后，再重复绑定域名，系统自动重复申请ssl安全证书，致使证书失效，这样访问网站就提醒证书不安全了。好在一个星期之后可以重新申请！</p>
<h1 id="希冀"><a href="#希冀" class="headerlink" title="希冀"></a>希冀</h1><p>以上便是鄙人在手机端，使用emlog和typecho在coding pages上进行项目托管体验有效期左右的小小感受！</p>
<p>coding适合好的项目托管平台，跟国外的Github类似，但是国内的话coding的访问速度要快的多，而且coding还可以免费使用htts/ssl服务。</p>
<p>有人说这是公测阶段，后续应该是要收费的了。</p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>后续还有什么新的发现，再继续追加。</p>
<p>总之，希望coding越做越好！</p>
]]></content>
      <categories>
        <category>知识点</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>项目托管</tag>
      </tags>
  </entry>
</search>
